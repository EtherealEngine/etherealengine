map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream ee_app {
    server                               host.docker.internal:3000;
}

upstream ee_api {
    server                               host.docker.internal:3030;
}

upstream ee_resources {
    server                               host.docker.internal:8642;
}

upstream ee_instances {
    server                               host.docker.internal:3031;
}
upstream ee_media {
    server                               host.docker.internal:3032;
}

server {
    listen                  443 ssl;
    listen                  [::]:443 ssl;
    server_name  local.etherealengine.com;
    ssl_certificate         ./certs/server-cert.pem;
    ssl_certificate_key     ./certs/server-key.pem;
    error_log  /var/log/nginx/error.log debug;

    if ($arg_server = instanceserver) {
        rewrite ^/primus$ /instanceserver/primus;
    }
    if ($arg_server = mediaserver) {
        rewrite ^/primus$ /mediaserver/primus;
    }

    location / {
        proxy_set_header HOST $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_ssl_server_name on;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_buffering     off;

        # 12 hours
        proxy_connect_timeout 43200000;
        proxy_read_timeout    43200000;
        proxy_send_timeout    43200000;
        
        proxy_pass_request_headers on;
        proxy_pass https://ee_app;
    }

    location /static-resources/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_http_version 1.1;
        proxy_ssl_server_name on;

        return 302 https://$http_host/fileserver$request_uri;
    }

    location /fileserver/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_http_version 1.1;
        proxy_ssl_server_name on;

        proxy_pass https://ee_resources/;
    }

    location /primus {
        proxy_set_header HOST $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass_request_headers on;

        proxy_http_version 1.1;
        proxy_ssl_server_name on;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        proxy_buffering     off;

        # 12 hours
        proxy_connect_timeout 43200000;
        proxy_read_timeout    43200000;
        proxy_send_timeout    43200000;
        proxy_pass https://ee_api;

    }

    location /instanceserver/ {
        proxy_set_header HOST $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass_request_headers on;

        proxy_http_version 1.1;
        proxy_ssl_server_name on;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        proxy_buffering     off;

        # 12 hours
        proxy_connect_timeout 43200000;
        proxy_read_timeout    43200000;
        proxy_send_timeout    43200000;
        proxy_pass https://ee_instances/;
    }

    location /mediaserver/ {
        proxy_set_header HOST $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass_request_headers on;

        proxy_http_version 1.1;
        proxy_ssl_server_name on;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        proxy_buffering     off;

        # 12 hours
        proxy_connect_timeout 43200000;
        proxy_read_timeout    43200000;
        proxy_send_timeout    43200000;
        proxy_pass https://ee_media/;
    }

    #Setup the dbs and maybe redis

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}

server {
    listen       80 default_server;
    listen  [::]:80 default_server;
    error_log  /var/log/nginx/error.log debug;

    server_name _;

    return 301 https://$host$request_uri;
}
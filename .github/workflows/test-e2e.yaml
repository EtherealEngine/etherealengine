name: test-e2e
on:
  push:
    branches:
      [test/ee-bot-test]
jobs:
  secrets-gate:
    runs-on: ubuntu-latest
    outputs:
      ok: ${{ steps.check-secrets.outputs.ok }}
    steps:
      - name: check for secrets needed to run workflows
        id: check-secrets
        run: |
          if [ ${{ secrets.PROJECTS_BUILD_ENABLED }} == 'true' ]; then
            echo "ok=enabled" >> $GITHUB_OUTPUT
          fi
      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
  compile-codebase:
    needs:
      - secrets-gate
    if: ${{ needs.secrets-gate.outputs.ok == 'enabled' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Ethereal Engine
        uses: actions/checkout@v3
      - name: Checkout ee-development-test-suite
        uses: actions/checkout@v3
        with:
          repository: etherealengine/ee-development-test-suite
          path: './packages/projects/projects/ee-development-test-suite'
          ref: 'test/bot-test'
      - name: Checkout ee-bot
        uses: actions/checkout@v3
        with:
          repository: etherealengine/ee-bot
          path: './packages/projects/projects/ee-bot'
          ref: 'test/bot-test'
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: restore lerna
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
            package-lock.json
          key: ${{ runner.os }}-branch-build-${{ hashFiles('**/package.json') }}
      - run: cp .env.local.default .env.local
      - run: npm install --production=false --loglevel notice --legacy-peer-deps
      - run: npm run lint
      # - run: npm run check-errors
      # - run: npm run check-eslint
      - run: npm run dev-docker
      - run: npm run dev-reinit
      - run: npm run test-e2e
      - run: npm run build-client
      

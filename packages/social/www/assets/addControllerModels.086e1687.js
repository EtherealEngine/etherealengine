import{O as p,aC as c,M as h,a3 as u,B as g,g as d,$ as m,az as f,a6 as x,aq as b}from"./three.module.0404e109.js";import{g as y,t as l}from"./avatarFunctions.c7a0e273.js";import{X as M}from"./[projectId].d5e44847.js";class w extends p{controller;bones;constructor(e,n,i){super();this.controller=e,this.bones=[],this.add(n);const t=n.getObjectByProperty("type","SkinnedMesh");t.frustumCulled=!1,t.castShadow=!0,t.receiveShadow=!0,["wrist","thumb-metacarpal","thumb-phalanx-proximal","thumb-phalanx-distal","thumb-tip","index-finger-metacarpal","index-finger-phalanx-proximal","index-finger-phalanx-intermediate","index-finger-phalanx-distal","index-finger-tip","middle-finger-metacarpal","middle-finger-phalanx-proximal","middle-finger-phalanx-intermediate","middle-finger-phalanx-distal","middle-finger-tip","ring-finger-metacarpal","ring-finger-phalanx-proximal","ring-finger-phalanx-intermediate","ring-finger-phalanx-distal","ring-finger-tip","pinky-finger-metacarpal","pinky-finger-phalanx-proximal","pinky-finger-phalanx-intermediate","pinky-finger-phalanx-distal","pinky-finger-tip"].forEach(r=>{const o=n.getObjectByName(r);o?o.jointName=r:console.warn(`Couldn't find ${r} in ${i} hand mesh`),this.bones.push(o)})}updateMesh(){const e=this.controller.joints;if(!!e)for(let n=0;n<this.bones.length;n++){const i=this.bones[n];if(i){const t=e[i.jointName];if(t?.visible){const s=t.position;i&&(i.position.copy(s),i.quaternion.copy(t.quaternion))}}}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.updateMesh()}}const R=(a,e)=>{const i=l.getFromCache("/models/webxr/controllers/valve_controller_knu_1_0_right.glb").scene.children[2].clone();i.position.z=-.12,i.material=new b,a.add(i),a.userData.mesh=i,e&&a.userData.mesh.scale.set(-1,1,1)},k=a=>{const e=y(a,M);[e.controllerLeft,e.controllerRight].forEach(t=>{t.addEventListener("connected",s=>{const r=s.data;if(!(r.targetRayMode!=="tracked-pointer"&&r.targetRayMode!=="gaze")){if(t.targetRay)t.targetRay.visible=!0;else{const o=D(s.data);t.add(o),t.targetRay=o}t.userData.xrInputSource=r}}),t.addEventListener("disconnected",s=>{t?.targetRay&&(t.targetRay.visible=!1)})}),[e.controllerGripLeft,e.controllerGripRight].forEach(t=>{t.addEventListener("connected",s=>{const r=s.data;r.targetRayMode!=="tracked-pointer"||!r.gamepad||(t.userData.mesh&&(r.handedness==="left"?t.userData.mesh.scale.set(-1,1,1):t.userData.mesh.scale.setScalar(1)),t.userData.xrInputSource=r)}),R(t,t===e.controllerGripLeft)})},S=(a,e)=>{const n=l.getFromCache(`/models/webxr/controllers/hands/${e}.glb`)?.scene?.children[0];if(!n){console.error(`Could not load ${e} hand mesh`);return}a.userData.mesh&&a.remove(a.userData.mesh),a.userData.mesh=new w(a,n,e),a.add(a.userData.mesh),a.userData.handedness=e},D=a=>{let e,n;switch(a.targetRayMode){case"tracked-pointer":return e=new g,e.setAttribute("position",new d([0,0,0,0,0,-1],3)),e.setAttribute("color",new d([.5,.5,.5,0,0,0],3)),e.setAttribute("alpha",new d([1,0],1)),n=new m({vertexColors:!0,blending:f}),new x(e,n);case"gaze":return e=new c(.02,.04,32).translate(0,0,-1),n=new h({opacity:.5,transparent:!0}),new u(e,n)}};export{k as a,S as i};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

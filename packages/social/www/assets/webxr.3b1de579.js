import{S as v,P as b,aA as R,W as E,aq as g,a3 as S,aB as A,aC as P,M as T}from"./three.module.0404e109.js";import{r as M,R as C}from"./vendor.c8b8cc93.js";import L from"./Player.78b7e742.js";import W from"./workerFunction.efd6a346.js";class F{static createButton(r,n={}){const e=document.createElement("button");function m(){if(n.domOverlay===void 0){var t=document.createElement("div");t.style.display="none",document.body.appendChild(t);var i=document.createElementNS("http://www.w3.org/2000/svg","svg");i.setAttribute("width","38"),i.setAttribute("height","38"),i.style.position="absolute",i.style.right="20px",i.style.top="20px",i.addEventListener("click",()=>{s.end()}),t.appendChild(i);var u=document.createElementNS("http://www.w3.org/2000/svg","path");u.setAttribute("d","M 12,12 L 28,28 M 28,12 12,28"),u.setAttribute("stroke","#fff"),u.setAttribute("strokeWidth","2"),i.appendChild(u),n.optionalFeatures===void 0&&(n.optionalFeatures=[]),n.optionalFeatures.push("dom-overlay"),n.domOverlay={root:t}}let s=null;async function y(l){l.addEventListener("end",a),r.xr.setReferenceSpaceType("local"),await r.xr.setSession(l),e.textContent="STOP AR",n.domOverlay.root.style.display="",s=l}function a(){s.removeEventListener("end",a),e.textContent="START AR",n.domOverlay.root.style.display="none",s=null}e.style.display="",e.style.cursor="pointer",e.style.left="calc(50% - 50px)",e.style.width="100px",e.textContent="START AR",e.onmouseenter=function(){e.style.opacity="1.0"},e.onmouseleave=function(){e.style.opacity="0.5"},e.onclick=function(){s===null?navigator.xr.requestSession("immersive-ar",n).then(y):s.end()}}function o(){e.style.display="",e.style.cursor="auto",e.style.left="calc(50% - 75px)",e.style.width="150px",e.onmouseenter=null,e.onmouseleave=null,e.onclick=null}function d(){o(),e.textContent="AR NOT SUPPORTED"}function c(t){t.style.position="absolute",t.style.bottom="20px",t.style.padding="12px 6px",t.style.border="1px solid #fff",t.style.borderRadius="4px",t.style.background="rgba(0,0,0,0.1)",t.style.color="#fff",t.style.font="normal 13px sans-serif",t.style.textAlign="center",t.style.opacity="0.5",t.style.outline="none",t.style.zIndex="999"}if("xr"in navigator)return e.id="ARButton",e.style.display="none",c(e),navigator.xr.isSessionSupported("immersive-ar").then(t=>{t?m():d()}).catch(d),e;{const t=document.createElement("a");return window.isSecureContext===!1?(t.href=document.location.href.replace(/^http:/,"https:"),t.innerHTML="WEBXR NEEDS HTTPS"):(t.href="https://immersiveweb.dev/",t.innerHTML="WEBXR NOT AVAILABLE"),t.style.left="calc(50% - 90px)",t.style.width="180px",t.style.textDecoration="none",c(t),t}}}const O=()=>{let f,r,n,e,m,o,d=null,c=!1;return M.exports.useEffect(()=>{i(),s();const t=new L({scene:n,renderer:e,worker:new W,meshFilePath:"/test.uvol",videoFilePath:"/test.mp4",manifestFilePath:"/test.manifest",scale:1,onMeshBuffering:a=>{console.warn("BUFFERING!!",a)},onFrameShow:()=>{console.warn("SHOWING!!")}});t.mesh.position.set(0,0,0),t.mesh.matrixAutoUpdate=!0,t.mesh.matrixWorldNeedsUpdate=!0,t.mesh.visible=!0;function i(){f=document.createElement("div"),document.body.appendChild(f),n=new v,r=new b(70,window.innerWidth/window.innerHeight,.01,100),r.position.set(0,1,5),n.add(r);const a=new R(16777215,12303359,1);a.position.set(.5,1,.25),n.add(a),e=new E({antialias:!0,alpha:!0}),e.setPixelRatio(window.devicePixelRatio),e.setSize(window.innerWidth,window.innerHeight),e.xr.enabled=!0,f.appendChild(e.domElement);const l=new g({color:16777215*Math.random()}),h=new S(new A(.1,.1,.1),l);h.scale.y=Math.random()*2+.1,n.add(h),document.body.appendChild(F.createButton(e,{requiredFeatures:["hit-test"]}));function p(){o.visible&&(t.play(),t.mesh.position.setFromMatrixPosition(o.matrix),h.position.setFromMatrixPosition(o.matrix))}m=e.xr.getController(0),m.addEventListener("select",p),n.add(m),o=new S(new P(.15,.2,32).rotateX(-Math.PI/2),new T),o.matrixAutoUpdate=!1,o.visible=!1,n.add(o),window.addEventListener("click",p),window.addEventListener("resize",u)}function u(){r.aspect=window.innerWidth/window.innerHeight,r.updateProjectionMatrix(),e.setSize(window.innerWidth,window.innerHeight)}function s(){e.setAnimationLoop(y)}function y(a,l){if(l&&e.xr){const h=e.xr.getReferenceSpace(),p=e.xr.getSession();if(c===!1&&(p.requestReferenceSpace("viewer").then(w=>{p.requestHitTestSource({space:w}).then(x=>{d=x})}),p.addEventListener("end",()=>{c=!1,d=null}),c=!0),d){const w=l.getHitTestResults(d);if(w.length){const x=w[0];o.visible=!0,o.matrix.fromArray(x.getPose(h).transform.matrix)}else o.visible=!1}}t&&t.handleRender(()=>{e.render(n,r)})}},[]),C.createElement("button",{type:"button",onClick:()=>{}},"Hi")};export{F as ARButton,O as VideoRecording,O as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

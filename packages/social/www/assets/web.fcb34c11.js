import{W as v}from"./index.821475c5.js";import"./vendor.c8b8cc93.js";import"./_app.009e96ac.js";import"./index.0040ebb6.js";import"./CreatorService.2fe5442c.js";import"./AlertService.bfed2141.js";import"./feathers.081246a7.js";import"./upload.38e3baaf.js";import"./PopupsStateService.d6dc4710.js";import"./Slide.c23656e9.js";import"./capitalize.afc8605e.js";import"./ownerWindow.3d7152ce.js";import"./ButtonBase.4949ff38.js";import"./Modal.0a92aab7.js";import"./Dialog.869ec0a3.js";import"./Backdrop.4981fe97.js";import"./Button.9f6477a8.js";import"./Avatar.42349c47.js";import"./createSvgIcon.f69c4b03.js";var i=function(l,t,e,o){function u(n){return n instanceof e?n:new e(function(s){s(n)})}return new(e||(e=Promise))(function(n,s){function r(c){try{a(o.next(c))}catch(d){s(d)}}function p(c){try{a(o.throw(c))}catch(d){s(d)}}function a(c){c.done?n(c.value):u(c.value).then(r,p)}a((o=o.apply(l,t||[])).next())})};class A extends v{constructor(){super({name:"XRPlugin",platforms:["web"]})}initialize(t){return i(this,void 0,void 0,function*(){return console.log("Initialize called to plugin on web"),new Promise((e,o)=>{e({status:"web"})})})}start(t){return i(this,void 0,void 0,function*(){return new Promise((e,o)=>{navigator.mediaDevices.getUserMedia({audio:!t.disableAudio,video:!0});const u=document.getElementById("video"),n=t.parent?document.getElementById(t.parent):document.body;if(u)o({message:"camera already started"});else{const s=document.createElement("video");s.id="video",s.setAttribute("class",t.className||""),s.setAttribute("style","-webkit-transform: scaleX(-1); transform: scaleX(-1);"),n.appendChild(s),navigator.mediaDevices&&navigator.mediaDevices.getUserMedia&&navigator.mediaDevices.getUserMedia({video:!0}).then(function(r){s.srcObject=r,s.play(),e({})},r=>{o(r)})}})})}handleTap(){return i(this,void 0,void 0,function*(){})}stop(){return i(this,void 0,void 0,function*(){const t=document.getElementById("video");if(t){t.pause();const n=t.srcObject.getTracks();for(var e=0;e<n.length;e++){var o=n[e];o.stop()}t.remove()}})}transcodeVideo(t){return i(this,void 0,void 0,function*(){return new Promise((e,o)=>{e({status:"success",path:""})})})}createThumbnail(t){return i(this,void 0,void 0,function*(){return new Promise((e,o)=>{e({status:"success",path:""})})})}trim(t){return i(this,void 0,void 0,function*(){return new Promise((e,o)=>{e({status:"success",path:""})})})}getVideoInfo(){return i(this,void 0,void 0,function*(){return new Promise((t,e)=>{t({status:"success"})})})}execFFMPEG(t){return i(this,void 0,void 0,function*(){return console.log("execFFMPEG called to plugin on web"),new Promise((e,o)=>{e({status:"success"})})})}execFFPROBE(t){return i(this,void 0,void 0,function*(){return console.log("execFFPROBE called to plugin on web"),new Promise((e,o)=>{e({status:"success"})})})}getXRDataForFrame(t){return i(this,void 0,void 0,function*(){return console.log("getXRDataForFrame called to plugin on web"),new Promise((e,o)=>{e({data:{hasData:!1}})})})}startRecording(t,e,o,u,n,s){return i(this,void 0,void 0,function*(){return console.log("startRecording called to plugin on web"),new Promise((r,p)=>{r({status:"success"})})})}stopRecording(t){return i(this,void 0,void 0,function*(){return console.log("stopRecording called to plugin on web"),new Promise((e,o)=>{e({result:"success",filePath:""})})})}getRecordingStatus(t){return i(this,void 0,void 0,function*(){return console.log("getRecordingStatus called to plugin on web"),new Promise((e,o)=>{e({status:"success"})})})}takePhoto(t){return i(this,void 0,void 0,function*(){return console.log("takePhoto called to plugin on web"),new Promise((e,o)=>{e({status:"success"})})})}saveRecordingToVideo(t){return i(this,void 0,void 0,function*(){return console.log("saveRecordingToVideo called to plugin on web"),new Promise((e,o)=>{e({status:"success"})})})}shareMedia(t){return i(this,void 0,void 0,function*(){return console.log("shareMedia called to plugin on web"),new Promise((e,o)=>{e({status:"success"})})})}showVideo(t){return i(this,void 0,void 0,function*(){return console.log("showVideo called to plugin on web"),new Promise((e,o)=>{e({status:"success"})})})}hideVideo(t){return i(this,void 0,void 0,function*(){return console.log("showVideo called to plugin on web"),new Promise((e,o)=>{e({status:"success"})})})}playVideo(t){return i(this,void 0,void 0,function*(){return console.log("playVideo called to plugin on web"),new Promise((e,o)=>{e({status:"success"})})})}pauseVideo(t){return i(this,void 0,void 0,function*(){return console.log("pauseVideo called to plugin on web"),new Promise((e,o)=>{e({status:"success"})})})}scrubTo(t){return i(this,void 0,void 0,function*(){return console.log("scrubTo called to plugin on web"),new Promise((e,o)=>{e({status:"success"})})})}deleteVideo(t){return i(this,void 0,void 0,function*(){return console.log("deleteVideo called to plugin on web"),new Promise((e,o)=>{e({status:"success"})})})}saveVideoTo(t){return i(this,void 0,void 0,function*(){return console.log("saveVideoTo called to plugin on web"),new Promise((e,o)=>{e({status:"success"})})})}clearAnchors(){}}export{A as XRPluginWeb};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

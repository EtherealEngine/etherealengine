import{V as A}from"./three.module.0404e109.js";import{E as j,g as o,p as m,e as r,H as v,f as s,j as c,d as p}from"./avatarFunctions.c7a0e273.js";import{H as y,N as h,J as l,K as b,M as S}from"./[projectId].d5e44847.js";import{a as C}from"./AuthService.6db25508.js";import"./index.0040ebb6.js";import"./vendor.c8b8cc93.js";import"./_app.009e96ac.js";import"./SystemUpdateType.4e88f289.js";import"./upload.38e3baaf.js";import"./index.9af95596.js";import"./AlertService.bfed2141.js";import"./feathers.081246a7.js";const g=p([r]),d=p([r,s]);async function U(n){n.receptors.add(f);function f(e){y.matches(e).when(h.avatarAnimation.matches,({$from:t})=>{if(t===j.userId)return;const a=n.getUserAvatarEntity(t);if(!o(a,C))return console.warn(`Avatar Entity for user id ${t} does not exist! You should probably reconnect...`);e.params.forceTransition=!0,l.forceUpdateAnimationState(a,e.newStateName,e.params)})}return await Promise.all([m.instance.getDefaultModel(),m.instance.getAnimations()]),()=>{const{delta:e}=n;for(const t of g(n)){const a=o(t,r),i=e*a.animationSpeed;a.mixer.update(i)}for(const t of d.enter(n)){v(t);const a=o(t,s);a.animationGraph=new b,a.currentState=a.animationGraph.states[S.IDLE],a.prevVelocity=new A,c.mountCurrentState(t)}for(const t of d(n)){const a=o(t,r),i=o(t,s),u=e*a.animationSpeed;i.animationGraph.render(t,u),c.render(t,e)}}}export{U as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5pbWF0aW9uU3lzdGVtLmRiYTQ3OGQ5LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9lbmdpbmUvc3JjL2F2YXRhci9BbmltYXRpb25TeXN0ZW0udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmVjdG9yMyB9IGZyb20gJ3RocmVlJ1xuaW1wb3J0IHsgZGVmaW5lUXVlcnksIGdldENvbXBvbmVudCB9IGZyb20gJy4uL2Vjcy9mdW5jdGlvbnMvQ29tcG9uZW50RnVuY3Rpb25zJ1xuaW1wb3J0IHsgQW5pbWF0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL0FuaW1hdGlvbkNvbXBvbmVudCdcbmltcG9ydCB7IEF2YXRhckFuaW1hdGlvbkdyYXBoIH0gZnJvbSAnLi9hbmltYXRpb25zL0F2YXRhckFuaW1hdGlvbkdyYXBoJ1xuaW1wb3J0IHsgQXZhdGFyU3RhdGVzIH0gZnJvbSAnLi9hbmltYXRpb25zL1V0aWwnXG5pbXBvcnQgeyBBbmltYXRpb25SZW5kZXJlciB9IGZyb20gJy4vYW5pbWF0aW9ucy9BbmltYXRpb25SZW5kZXJlcidcbmltcG9ydCB7IGxvYWRBdmF0YXJGb3JFbnRpdHkgfSBmcm9tICcuL2Z1bmN0aW9ucy9hdmF0YXJGdW5jdGlvbnMnXG5pbXBvcnQgeyBBbmltYXRpb25NYW5hZ2VyIH0gZnJvbSAnLi9BbmltYXRpb25NYW5hZ2VyJ1xuaW1wb3J0IHsgQXZhdGFyQW5pbWF0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL0F2YXRhckFuaW1hdGlvbkNvbXBvbmVudCdcbmltcG9ydCB7IE5ldHdvcmtXb3JsZEFjdGlvbiB9IGZyb20gJy4uL25ldHdvcmtpbmcvZnVuY3Rpb25zL05ldHdvcmtXb3JsZEFjdGlvbidcbmltcG9ydCB7IE5ldHdvcmsgfSBmcm9tICcuLi9uZXR3b3JraW5nL2NsYXNzZXMvTmV0d29yaydcbmltcG9ydCB7IEFuaW1hdGlvbkdyYXBoIH0gZnJvbSAnLi9hbmltYXRpb25zL0FuaW1hdGlvbkdyYXBoJ1xuaW1wb3J0IHsgU3lzdGVtIH0gZnJvbSAnLi4vZWNzL2NsYXNzZXMvU3lzdGVtJ1xuaW1wb3J0IHsgV29ybGQgfSBmcm9tICcuLi9lY3MvY2xhc3Nlcy9Xb3JsZCdcbmltcG9ydCB7IEVuZ2luZSB9IGZyb20gJy4uL2Vjcy9jbGFzc2VzL0VuZ2luZSdcbmltcG9ydCB7IG1hdGNoZXMgfSBmcm9tICd0cy1tYXRjaGVzJ1xuaW1wb3J0IHsgTmV0d29ya09iamVjdENvbXBvbmVudCB9IGZyb20gJy4uL25ldHdvcmtpbmcvY29tcG9uZW50cy9OZXR3b3JrT2JqZWN0Q29tcG9uZW50J1xuXG5jb25zdCBhbmltYXRpb25RdWVyeSA9IGRlZmluZVF1ZXJ5KFtBbmltYXRpb25Db21wb25lbnRdKVxuY29uc3QgYXZhdGFyQW5pbWF0aW9uUXVlcnkgPSBkZWZpbmVRdWVyeShbQW5pbWF0aW9uQ29tcG9uZW50LCBBdmF0YXJBbmltYXRpb25Db21wb25lbnRdKVxuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBBbmltYXRpb25TeXN0ZW0od29ybGQ6IFdvcmxkKTogUHJvbWlzZTxTeXN0ZW0+IHtcbiAgd29ybGQucmVjZXB0b3JzLmFkZChhbmltYXRpb25BY3Rpb25SZWNlcHRvcilcblxuICBmdW5jdGlvbiBhbmltYXRpb25BY3Rpb25SZWNlcHRvcihhY3Rpb24pIHtcbiAgICBtYXRjaGVzKGFjdGlvbikud2hlbihOZXR3b3JrV29ybGRBY3Rpb24uYXZhdGFyQW5pbWF0aW9uLm1hdGNoZXMsICh7ICRmcm9tIH0pID0+IHtcbiAgICAgIGlmICgkZnJvbSA9PT0gRW5naW5lLnVzZXJJZCkgcmV0dXJuXG4gICAgICBjb25zdCBhdmF0YXJFbnRpdHkgPSB3b3JsZC5nZXRVc2VyQXZhdGFyRW50aXR5KCRmcm9tKVxuICAgICAgY29uc3QgbmV0d29ya09iamVjdCA9IGdldENvbXBvbmVudChhdmF0YXJFbnRpdHksIE5ldHdvcmtPYmplY3RDb21wb25lbnQpXG4gICAgICBpZiAoIW5ldHdvcmtPYmplY3QpIHtcbiAgICAgICAgcmV0dXJuIGNvbnNvbGUud2FybihgQXZhdGFyIEVudGl0eSBmb3IgdXNlciBpZCAkeyRmcm9tfSBkb2VzIG5vdCBleGlzdCEgWW91IHNob3VsZCBwcm9iYWJseSByZWNvbm5lY3QuLi5gKVxuICAgICAgfVxuICAgICAgYWN0aW9uLnBhcmFtcy5mb3JjZVRyYW5zaXRpb24gPSB0cnVlXG4gICAgICBBbmltYXRpb25HcmFwaC5mb3JjZVVwZGF0ZUFuaW1hdGlvblN0YXRlKGF2YXRhckVudGl0eSwgYWN0aW9uLm5ld1N0YXRlTmFtZSwgYWN0aW9uLnBhcmFtcylcbiAgICB9KVxuICB9XG5cbiAgYXdhaXQgUHJvbWlzZS5hbGwoW0FuaW1hdGlvbk1hbmFnZXIuaW5zdGFuY2UuZ2V0RGVmYXVsdE1vZGVsKCksIEFuaW1hdGlvbk1hbmFnZXIuaW5zdGFuY2UuZ2V0QW5pbWF0aW9ucygpXSlcblxuICByZXR1cm4gKCkgPT4ge1xuICAgIGNvbnN0IHsgZGVsdGEgfSA9IHdvcmxkXG5cbiAgICBmb3IgKGNvbnN0IGVudGl0eSBvZiBhbmltYXRpb25RdWVyeSh3b3JsZCkpIHtcbiAgICAgIGNvbnN0IGFuaW1hdGlvbkNvbXBvbmVudCA9IGdldENvbXBvbmVudChlbnRpdHksIEFuaW1hdGlvbkNvbXBvbmVudClcbiAgICAgIGNvbnN0IG1vZGlmaWVkRGVsdGEgPSBkZWx0YSAqIGFuaW1hdGlvbkNvbXBvbmVudC5hbmltYXRpb25TcGVlZFxuICAgICAgYW5pbWF0aW9uQ29tcG9uZW50Lm1peGVyLnVwZGF0ZShtb2RpZmllZERlbHRhKVxuICAgIH1cblxuICAgIGZvciAoY29uc3QgZW50aXR5IG9mIGF2YXRhckFuaW1hdGlvblF1ZXJ5LmVudGVyKHdvcmxkKSkge1xuICAgICAgbG9hZEF2YXRhckZvckVudGl0eShlbnRpdHkpXG4gICAgICBjb25zdCBhdmF0YXJBbmltYXRpb25Db21wb25lbnQgPSBnZXRDb21wb25lbnQoZW50aXR5LCBBdmF0YXJBbmltYXRpb25Db21wb25lbnQpXG4gICAgICBhdmF0YXJBbmltYXRpb25Db21wb25lbnQuYW5pbWF0aW9uR3JhcGggPSBuZXcgQXZhdGFyQW5pbWF0aW9uR3JhcGgoKVxuICAgICAgYXZhdGFyQW5pbWF0aW9uQ29tcG9uZW50LmN1cnJlbnRTdGF0ZSA9IGF2YXRhckFuaW1hdGlvbkNvbXBvbmVudC5hbmltYXRpb25HcmFwaC5zdGF0ZXNbQXZhdGFyU3RhdGVzLklETEVdXG4gICAgICBhdmF0YXJBbmltYXRpb25Db21wb25lbnQucHJldlZlbG9jaXR5ID0gbmV3IFZlY3RvcjMoKVxuICAgICAgQW5pbWF0aW9uUmVuZGVyZXIubW91bnRDdXJyZW50U3RhdGUoZW50aXR5KVxuICAgIH1cblxuICAgIGZvciAoY29uc3QgZW50aXR5IG9mIGF2YXRhckFuaW1hdGlvblF1ZXJ5KHdvcmxkKSkge1xuICAgICAgY29uc3QgYW5pbWF0aW9uQ29tcG9uZW50ID0gZ2V0Q29tcG9uZW50KGVudGl0eSwgQW5pbWF0aW9uQ29tcG9uZW50KVxuICAgICAgY29uc3QgYXZhdGFyQW5pbWF0aW9uQ29tcG9uZW50ID0gZ2V0Q29tcG9uZW50KGVudGl0eSwgQXZhdGFyQW5pbWF0aW9uQ29tcG9uZW50KVxuICAgICAgY29uc3QgZGVsdGFUaW1lID0gZGVsdGEgKiBhbmltYXRpb25Db21wb25lbnQuYW5pbWF0aW9uU3BlZWRcbiAgICAgIGF2YXRhckFuaW1hdGlvbkNvbXBvbmVudC5hbmltYXRpb25HcmFwaC5yZW5kZXIoZW50aXR5LCBkZWx0YVRpbWUpXG4gICAgICBBbmltYXRpb25SZW5kZXJlci5yZW5kZXIoZW50aXR5LCBkZWx0YSlcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiZ2dCQWtCQSxLQUFNLEdBQWlCLEVBQVksQ0FBQyxJQUM5QixFQUF1QixFQUFZLENBQUMsRUFBb0IscUJBRWhCLEVBQStCLEdBQ3JFLFVBQVUsSUFBSSxjQUVhLEVBQVEsV0FDL0IsR0FBUSxLQUFLLEVBQW1CLGdCQUFnQixRQUFTLENBQUMsQ0FBRSxXQUFZLElBQzFFLElBQVUsRUFBTyxtQkFDZixHQUFlLEVBQU0sb0JBQW9CLE1BRTNDLENBRGtCLEVBQWEsRUFBYyxTQUV4QyxTQUFRLEtBQUssNkJBQTZCLHdEQUU1QyxPQUFPLGdCQUFrQixLQUNqQiwwQkFBMEIsRUFBYyxFQUFPLGFBQWMsRUFBTyxzQkFJakYsU0FBUSxJQUFJLENBQUMsRUFBaUIsU0FBUyxrQkFBbUIsRUFBaUIsU0FBUyxrQkFFbkYsSUFBTSxNQUNMLENBQUUsU0FBVSxXQUVQLEtBQVUsR0FBZSxHQUFRLE1BQ3BDLEdBQXFCLEVBQWEsRUFBUSxHQUMxQyxFQUFnQixFQUFRLEVBQW1CLGlCQUM5QixNQUFNLE9BQU8sWUFHdkIsS0FBVSxHQUFxQixNQUFNLEdBQVEsR0FDbEMsUUFDZCxHQUEyQixFQUFhLEVBQVEsS0FDN0IsZUFBaUIsR0FBSSxLQUNyQixhQUFlLEVBQXlCLGVBQWUsT0FBTyxFQUFhLFFBQzNFLGFBQWUsR0FBSSxLQUMxQixrQkFBa0IsWUFHM0IsS0FBVSxHQUFxQixHQUFRLE1BQzFDLEdBQXFCLEVBQWEsRUFBUSxHQUMxQyxFQUEyQixFQUFhLEVBQVEsR0FDaEQsRUFBWSxFQUFRLEVBQW1CLGlCQUNwQixlQUFlLE9BQU8sRUFBUSxLQUNyQyxPQUFPLEVBQVEifQ==

import{r as P,n as z,f as D,R as a,u as Q}from"./vendor.475cb2ff.js";import{s as X,u as $,a as B,h as F}from"./_app.f0a72417.js";import{C as K}from"./CreatorService.46518bb7.js";import{P as b}from"./PopupsStateService.a3af5f05.js";import{m as q,S as J}from"./Slide.a5edb72c.js";import{D as Z}from"./Dialog.016d78d4.js";import{B as j}from"./Button.a7dce846.js";import{A as V}from"./Avatar.7391d47d.js";const ee="_footerContainer_11rex_1",te="_footerItem_11rex_21",ne="_footerAvatar_11rex_27";var H={footerContainer:ee,footerItem:te,footerAvatar:ne},O={exports:{}};(function(o,y){(function(m,i){i(y,P.exports)})(z,function(m,i){var f="default"in i?i.default:i;function C(r){return(C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(n){return typeof n}:function(n){return n&&typeof Symbol=="function"&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(r)}function E(r,n){for(var s=0;s<n.length;s++){var c=n[s];c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(r,c.key,c)}}function l(r,n,s){return n in r?Object.defineProperty(r,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):r[n]=s,r}function x(r){return(x=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(r)}function R(r,n){return(R=Object.setPrototypeOf||function(s,c){return s.__proto__=c,s})(r,n)}function p(r){if(r===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return r}function N(r){var n=function(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(s){return!1}}();return function(){var s,c=x(r);return s=n?(s=x(this).constructor,Reflect.construct(c,arguments,s)):c.apply(this,arguments),c=this,!(s=s)||typeof s!="object"&&typeof s!="function"?p(c):s}}function A(r,n){var s,c=(n=n===void 0?{}:n).insertAt;r&&typeof document!="undefined"&&(s=document.head||document.getElementsByTagName("head")[0],(n=document.createElement("style")).type="text/css",c==="top"&&s.firstChild?s.insertBefore(n,s.firstChild):s.appendChild(n),n.styleSheet?n.styleSheet.cssText=r:n.appendChild(document.createTextNode(r)))}var w={animated:"rsw_1z",fadeInRight:"rsw_1M",fadeInLeft:"rsw_19",fadeOutRight:"rsw_3C",fadeOutLeft:"rsw_1u"};A(`/**
 * Snippets from animate.css
 * Credit goes to https://github.com/daneden
 * github.com/daneden/animate.css
*/
.rsw_1z {
  -webkit-animation-duration: .8192s;
  animation-duration: .8192s;
  -webkit-animation-fill-mode: backwards;
  animation-fill-mode: backwards;
}

/** fadeInRight */
@-webkit-keyframes rsw_1M {
  from {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none;
  }
}

@keyframes rsw_1M {
  from {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none;
  }
}

.rsw_1M {
  -webkit-animation-name: rsw_1M;
  animation-name: rsw_1M;
}

/** fadeInLeft */
@-webkit-keyframes rsw_19 {
  from {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none;
  }
}

@keyframes rsw_19 {
  from {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none;
  }
}

.rsw_19 {
  -webkit-animation-name: rsw_19;
  animation-name: rsw_19;
}

/** fadeOutRight */
@-webkit-keyframes rsw_3C {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0);
  }
}

@keyframes rsw_3C {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0);
  }
}

.rsw_3C {
  -webkit-animation-name: rsw_3C;
  animation-name: rsw_3C;
}

/** fadeOutLeft */
@-webkit-keyframes rsw_1u {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0);
  }
}

@keyframes rsw_1u {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0);
  }
}

.rsw_1u {
  -webkit-animation-name: rsw_1u;
  animation-name: rsw_1u;
}
`);var I="rsw_2Y",M="rsw_2f",T="rsw_3G";A(`/** Step Wizard */
.rsw_2Y {
    position: relative;
}

.rsw_2f {
    opacity: 0;
    pointer-events: none;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 0;
}

.rsw_3G {
    opacity: 1;
    pointer-events: inherit;
    position: relative;
    z-index: 1;
}
`);var k=function(){(function(S,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");S.prototype=Object.create(e&&e.prototype,{constructor:{value:S,writable:!0,configurable:!0}}),e&&R(S,e)})(c,i.PureComponent);var r,n,s=N(c);function c(S){var e;return function(t,d){if(!(t instanceof d))throw new TypeError("Cannot call a class as a function")}(this,c),l(p(e=s.call(this,S)),"initialState",function(){var t={activeStep:0,classes:{},hashKeys:{},namedSteps:{}},d=(typeof window=="undefined"?"undefined":C(window))==="object"?e.getHash():"",h=e.getSteps();h.forEach(function(L,g){t.hashKeys[g]=L.props&&L.props.hashKey||"step".concat(g+1),t.hashKeys[t.hashKeys[g]]=g,t.namedSteps[g]=L.props&&L.props.stepName||"step".concat(g+1),t.namedSteps[t.namedSteps[g]]=g});var _=e.props.initialStep-1;return _&&h[_]&&(t.activeStep=_),e.props.isHashEnabled&&d&&t.hashKeys[d]!==void 0&&(t.activeStep=t.hashKeys[d]),e.props.transitions&&(t.classes[t.activeStep]=e.props.transitions.intro||""),t}),l(p(e),"getHash",function(){return decodeURI(window.location.hash).replace(/^#/,"")}),l(p(e),"getTransitions",function(){return e.props.transitions||{enterRight:"".concat(w.animated," ").concat(w.fadeInRight),enterLeft:"".concat(w.animated," ").concat(w.fadeInLeft),exitRight:"".concat(w.animated," ").concat(w.fadeOutRight),exitLeft:"".concat(w.animated," ").concat(w.fadeOutLeft)}}),l(p(e),"onHashChange",function(){var t=e.state.hashKeys[e.getHash()];t!==void 0&&e.setActiveStep(t)}),l(p(e),"isInvalidStep",function(t){return t<0||t>=e.totalSteps}),l(p(e),"setActiveStep",function(t){var d,h,_=e.state.activeStep;_!==t&&(e.isInvalidStep(t)?console.error("".concat(t+1," is an invalid step")):(d=e.state.classes,h=e.getTransitions(),_<t?(d[_]=h.exitLeft,d[t]=h.enterRight):(d[_]=h.exitRight,d[t]=h.enterLeft),e.setState({activeStep:t,classes:d},function(){e.onStepChange({previousStep:_+1,activeStep:t+1})})))}),l(p(e),"onStepChange",function(t){e.props.onStepChange(t),e.props.isHashEnabled&&e.updateHash(e.state.activeStep)}),l(p(e),"getSteps",function(){return f.Children.toArray(e.props.children)}),l(p(e),"firstStep",function(){return e.goToStep(1)}),l(p(e),"lastStep",function(){return e.goToStep(e.totalSteps)}),l(p(e),"nextStep",function(){return e.setActiveStep(e.state.activeStep+1)}),l(p(e),"previousStep",function(){return e.setActiveStep(e.state.activeStep-1)}),l(p(e),"goToStep",function(t){e.props.isHashEnabled&&typeof t=="string"&&e.state.hashKeys[t]!==void 0?e.setActiveStep(e.state.hashKeys[t]):e.setActiveStep(t-1)}),l(p(e),"goToNamedStep",function(t){typeof t=="string"&&e.state.namedSteps[t]!==void 0?e.setActiveStep(e.state.namedSteps[t]):console.error('Cannot find step with name "'.concat(t,'"'))}),l(p(e),"updateHash",function(t){window.location.hash=e.state.hashKeys[t]}),l(p(e),"isReactComponent",function(t){return t=t.type,typeof t=="function"||C(t)==="object"}),e.state=e.initialState(),e}return r=c,(n=[{key:"componentDidMount",value:function(){this.props.isHashEnabled&&window.addEventListener("hashchange",this.onHashChange),this.props.instance(this)}},{key:"componentWillUnmount",value:function(){this.props.isHashEnabled&&window.removeEventListener("hashchange",this.onHashChange)}},{key:"currentStep",get:function(){return this.state.activeStep+1}},{key:"totalSteps",get:function(){return this.getSteps().length}},{key:"render",value:function(){var S=this,e={currentStep:this.currentStep,totalSteps:this.totalSteps,nextStep:this.nextStep,previousStep:this.previousStep,goToStep:this.goToStep,goToNamedStep:this.goToNamedStep,firstStep:this.firstStep,lastStep:this.lastStep},t=this.state.classes,d=f.Children.map(this.getSteps(),function(h,_){return h?(e.isActive=_===S.state.activeStep,e.transitions=t[_],!S.props.isLazyMount||S.props.isLazyMount&&e.isActive?f.createElement(v,e,S.isReactComponent(h)?f.cloneElement(h,e):h):null):null});return f.createElement("div",{className:this.props.className},this.props.nav&&f.cloneElement(this.props.nav,e),f.createElement("div",{className:I},d))}}])&&E(r.prototype,n),c}();k.defaultProps={children:[],className:null,initialStep:1,instance:function(){},isHashEnabled:!1,isLazyMount:!1,nav:null,onStepChange:function(){},transitions:void 0};var v=function(r){var n=r.children,s=r.isActive,r=r.transitions;return f.createElement("div",{className:"".concat(M," ").concat(r," ").concat(s?T:"").trim()},n)};v.defaultProps={children:[],isActive:!1,transitions:""},m.Step=v,m.default=k,Object.defineProperty(m,"__esModule",{value:!0})})})(O,O.exports);var ae=D(O.exports),W;(function(o){o[o.HIGH_QUALITY=0]="HIGH_QUALITY",o[o.MEDIUM_QUALITY=1]="MEDIUM_QUALITY",o[o.LOW_QUALITY=2]="LOW_QUALITY"})(W||(W={}));var U;(function(o){o[o.NO=0]="NO",o[o.YES=1]="YES"})(U||(U={}));var Y;(function(o){o[o.M4V=0]="M4V",o[o.MPEG4=1]="MPEG4",o[o.M4A=2]="M4A",o[o.QUICK_TIME=3]="QUICK_TIME"})(Y||(Y={}));const G=X("XRPlugin",{web:()=>import("./web.3797d765.js").then(o=>new o.XRPluginWeb)}),re="_mainBlock_19w53_1",se="_popup_19w53_5",oe="_media_19w53_12",ie="_media2_19w53_23",ce="_title_19w53_35",le="_box_19w53_53",pe="_btn_start_19w53_56",ue="_btn_dont_19w53_69",me="_btn_cancel_19w53_82",fe="_dialogWindow_19w53_140",de="_nav_19w53_196",he="_dot_19w53_201",ve="_active_19w53_213",_e="_animated_19w53_219",we="_intro_19w53_236",Se="_enterRight_19w53_251",ge="_enterLeft_19w53_266",be="_exitRight_19w53_280",ye="_exitLeft_19w53_294",Ce="_ldsring_19w53_1";var u={mainBlock:re,popup:se,media:oe,media2:ie,title:ce,box:le,btn_start:pe,btn_dont:ue,btn_cancel:me,dialogWindow:fe,nav:de,dot:he,active:ve,animated:_e,intro:we,enterRight:Se,enterLeft:ge,exitRight:be,exitLeft:ye,ldsring:Ce};q({});const Ee=a.forwardRef((o,y)=>a.createElement(J,{direction:"up",ref:y,...o})),xe=({onGoRegistration:o})=>{const[y,m]=P.exports.useState(!1),{t:i}=Q(),f=$(),C=f.creators.currentCreator.value,E=B(),l=()=>{G.accessPermission!==void 0&&G.accessPermission({}),C.steps==!0?k():m(!0)},x=()=>{m(!1)},R=v=>a.createElement("div",null,a.createElement("p",null,i("social:view.welcome"))),p=v=>a.createElement("div",null,a.createElement("h3",{className:"text-center"},i("social:view.step",{step:"1"})),a.createElement("p",null,i("social:view.text-step-1"))),N=v=>a.createElement("div",null,a.createElement("h3",{className:"text-center"},i("social:view.step",{step:"2"})),a.createElement("p",null,i("social:view.text-step-2"))),A=v=>a.createElement("div",null,a.createElement("h3",{className:"text-center"},i("social:view.step",{step:"3"})),a.createElement("p",null,i("social:view.text-step-3-part-1")),a.createElement("p",null,i("social:view.text-step-3-part-2")),a.createElement("p",null,i("social:view.text-step-3-part-3"))),w=v=>a.createElement("div",null,a.createElement("h3",{className:"text-center"},i("social:view.step",{step:"4"})),a.createElement("p",null,i("social:view.text-step-4-part-1")),a.createElement("p",null,i("social:view.text-step-4-part-2"))),I=v=>{const r=[];for(let n=1;n<=v.totalSteps;n+=1){const s=v.currentStep===n;r.push(a.createElement("span",{key:`step-${n}`,className:`${u.dot} ${s?u.active:""}`,onClick:()=>v.goToStep(n)},"\u2022"))}return a.createElement("div",{className:u.nav},r)},[M]=P.exports.useState({form:{},transitions:{enterRight:`${u.animated} ${u.enterRight}`,enterLeft:`${u.animated} ${u.enterLeft}`,exitRight:`${u.animated} ${u.exitRight}`,exitLeft:`${u.animated} ${u.exitLeft}`,intro:`${u.animated} ${u.intro}`}}),T=()=>{E(K.updateCreator({id:f.creators.currentCreator?.id?.value,steps:!0,name:f.creators.currentCreator?.name?.value,username:f.creators.currentCreator?.username?.value})),k()},k=()=>{m(!1),E(b.updateArMediaState(!0))};return a.createElement("div",{onClick:()=>{o()},className:u.mainBlock},a.createElement("img",{src:"/assets/tabBar(1).svg",onClick:l}),a.createElement(Z,{open:y,TransitionComponent:Ee,keepMounted:!0,onClose:x,"aria-labelledby":"alert-dialog-slide-title","aria-describedby":"alert-dialog-slide-description",className:u.dialogWindow,PaperProps:{style:{width:"100%",maxWidth:"100%",height:"max-content",borderRadius:"12px"}}},a.createElement("div",{className:u.popup},a.createElement(j,{onClick:x,color:"primary",className:u.btn_cancel},i("social:cancel")),a.createElement("div",null,a.createElement(ae,{nav:a.createElement(I,null),transitions:M.transitions},a.createElement(R,null),a.createElement(p,null),a.createElement(N,null),a.createElement(A,null),a.createElement(w,null))),a.createElement(j,{color:"primary",className:u.btn_dont,onClick:T},i("social:view.not-show")),a.createElement(j,{onClick:()=>{k()},color:"primary",className:u.btn_start},i("social:view.start")))))},ke=({setView:o,onGoRegistration:y})=>{const m=B(),i=$(),f=F();P.exports.useEffect(()=>{f.user.id.value&&m(K.getLoggedCreator())},[]);const C=l=>{m(b.updateCreatorPageState(!0,l))},E=()=>{m(b.updateCreatorPageState(!1)),m(b.updateCreatorFormState(!1)),m(b.updateFeedPageState(!1)),m(b.updateNewFeedPageState(!1)),m(b.updateArMediaState(!1)),m(b.updateShareFormState(!1)),o("featured")};return a.createElement("nav",{className:H.footerContainer},a.createElement("img",{src:"/assets/tabBar.png",onClick:()=>E(),className:H.footerItem}),a.createElement(xe,{onGoRegistration:y}),a.createElement(V,{onClick:()=>{C(i.creators.currentCreator?.id?.value)},alt:i.creators.currentCreator?.username?.value,className:H.footerAvatar,src:i.creators.currentCreator?.avatar?.value?i.creators.currentCreator?.avatar?.value:"/assets/userpic.png"}))};var je=ke;export{je as A,G as X};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

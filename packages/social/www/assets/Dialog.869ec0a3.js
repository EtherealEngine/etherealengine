import{y as D,_ as r,s as d}from"./_app.009e96ac.js";import{e as n,r as i,j as V}from"./vendor.c8b8cc93.js";import{w as Z,c}from"./capitalize.afc8605e.js";import{M as aa,P as ea}from"./Modal.0a92aab7.js";import{B as oa,F as ia}from"./Backdrop.4981fe97.js";var na=function(a){return{root:{"@media print":{position:"absolute !important"}},scrollPaper:{display:"flex",justifyContent:"center",alignItems:"center"},scrollBody:{overflowY:"auto",overflowX:"hidden",textAlign:"center","&:after":{content:'""',display:"inline-block",verticalAlign:"middle",height:"100%",width:"0"}},container:{height:"100%","@media print":{height:"auto"},outline:0},paper:{margin:32,position:"relative",overflowY:"auto","@media print":{overflowY:"visible",boxShadow:"none"}},paperScrollPaper:{display:"flex",flexDirection:"column",maxHeight:"calc(100% - 64px)"},paperScrollBody:{display:"inline-block",verticalAlign:"middle",textAlign:"left"},paperWidthFalse:{maxWidth:"calc(100% - 64px)"},paperWidthXs:{maxWidth:Math.max(a.breakpoints.values.xs,444),"&$paperScrollBody":n({},a.breakpoints.down(Math.max(a.breakpoints.values.xs,444)+32*2),{maxWidth:"calc(100% - 64px)"})},paperWidthSm:{maxWidth:a.breakpoints.values.sm,"&$paperScrollBody":n({},a.breakpoints.down(a.breakpoints.values.sm+32*2),{maxWidth:"calc(100% - 64px)"})},paperWidthMd:{maxWidth:a.breakpoints.values.md,"&$paperScrollBody":n({},a.breakpoints.down(a.breakpoints.values.md+32*2),{maxWidth:"calc(100% - 64px)"})},paperWidthLg:{maxWidth:a.breakpoints.values.lg,"&$paperScrollBody":n({},a.breakpoints.down(a.breakpoints.values.lg+32*2),{maxWidth:"calc(100% - 64px)"})},paperWidthXl:{maxWidth:a.breakpoints.values.xl,"&$paperScrollBody":n({},a.breakpoints.down(a.breakpoints.values.xl+32*2),{maxWidth:"calc(100% - 64px)"})},paperFullWidth:{width:"calc(100% - 64px)"},paperFullScreen:{margin:0,width:"100%",maxWidth:"100%",height:"100%",maxHeight:"none",borderRadius:0,"&$paperScrollBody":{margin:0,maxWidth:"100%"}}}},ra={enter:D.enteringScreen,exit:D.leavingScreen},ta=i.exports.forwardRef(function(a,C){var S=a.BackdropProps,$=a.children,e=a.classes,_=a.className,p=a.disableBackdropClick,t=p===void 0?!1:p,u=a.disableEscapeKeyDown,M=u===void 0?!1:u,x=a.fullScreen,T=x===void 0?!1:x,m=a.fullWidth,K=m===void 0?!1:m,b=a.maxWidth,j=b===void 0?"sm":b,k=a.onBackdropClick,l=a.onClose,F=a.onEnter,N=a.onEntered,A=a.onEntering,R=a.onEscapeKeyDown,X=a.onExit,Y=a.onExited,z=a.onExiting,f=a.open,h=a.PaperComponent,H=h===void 0?ea:h,g=a.PaperProps,E=g===void 0?{}:g,v=a.scroll,y=v===void 0?"paper":v,W=a.TransitionComponent,L=W===void 0?ia:W,w=a.transitionDuration,B=w===void 0?ra:w,I=a.TransitionProps,U=a["aria-describedby"],q=a["aria-labelledby"],G=V(a,["BackdropProps","children","classes","className","disableBackdropClick","disableEscapeKeyDown","fullScreen","fullWidth","maxWidth","onBackdropClick","onClose","onEnter","onEntered","onEntering","onEscapeKeyDown","onExit","onExited","onExiting","open","PaperComponent","PaperProps","scroll","TransitionComponent","transitionDuration","TransitionProps","aria-describedby","aria-labelledby"]),s=i.exports.useRef(),J=function(o){s.current=o.target},O=function(o){o.target===o.currentTarget&&o.target===s.current&&(s.current=null,k&&k(o),!t&&l&&l(o,"backdropClick"))};return i.exports.createElement(aa,r({className:d(e.root,_),BackdropComponent:oa,BackdropProps:r({transitionDuration:B},S),closeAfterTransition:!0},t?{disableBackdropClick:t}:{},{disableEscapeKeyDown:M,onEscapeKeyDown:R,onClose:l,open:f,ref:C},G),i.exports.createElement(L,r({appear:!0,in:f,timeout:B,onEnter:F,onEntering:A,onEntered:N,onExit:X,onExiting:z,onExited:Y,role:"none presentation"},I),i.exports.createElement("div",{className:d(e.container,e["scroll".concat(c(y))]),onMouseUp:O,onMouseDown:J},i.exports.createElement(H,r({elevation:24,role:"dialog","aria-describedby":U,"aria-labelledby":q},E,{className:d(e.paper,e["paperScroll".concat(c(y))],e["paperWidth".concat(c(String(j)))],E.className,T&&e.paperFullScreen,K&&e.paperFullWidth)}),$))))}),ua=Z(na,{name:"MuiDialog"})(ta);export{ua as D};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

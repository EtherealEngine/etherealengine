import{c as r,d as f,g as l,b as v,r as b}from"./avatarFunctions.c7a0e273.js";import"./three.module.0404e109.js";import"./index.0040ebb6.js";import"./vendor.c8b8cc93.js";const u=r("SoundEffect"),p=r("BackgroundMusic"),m=r("PlaySoundEffect");async function j(n){const g=f([u]),y=f([p]),S=f([u,m]);let a=!1,c=[],x,i;const E=o=>{a?o():c.push(o)},d=()=>{if(!a){if(console.log("starting audio"),a=!0,v.instance.dispatchEvent({type:v.EVENTS.START_SUSPENDED_CONTEXTS}),window.AudioContext=window.AudioContext||window.webkitAudioContext,window.AudioContext){i=new window.AudioContext;const o=i.createBuffer(1,1,22050),t=i.createBufferSource();t.buffer=o,t.connect(i.destination),t.start?t.start(0):t.play&&t.play(0)}c.forEach(o=>o()),c=null}},C=o=>{const t=o.getComponent(p);t.src&&!x&&(t.audio=new Audio,t.audio.loop=!0,t.audio.volume=t.volume,t.audio.addEventListener("loadeddata",()=>{t.audio.play()}),t.audio.src=t.src)},h=o=>{const t=o.getComponent(p);t&&t.audio&&t.audio.pause()},A=o=>{const t=l(o,u),e=l(o,m),s=t.audio[e.index];s.volume=Math.min(Math.max(e.volume,0),1),s.play(),b(o,m)};return window.addEventListener("touchstart",d,!0),window.addEventListener("touchend",d,!0),window.addEventListener("click",d,!0),()=>{for(const o of g.enter(n)){const t=l(o,u);t.src.forEach((e,s)=>{if(!e)return;const w=new Audio;t.audio[s]=w,w.src=e})}for(const o of y.enter(n))E(()=>C(o));for(const o of y.exit(n))h(o);for(const o of S.enter(n))E(()=>A(o))}}export{j as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

import{Q as I,V as C}from"./three.module.493739a3.js";import{d as b,b as v,g as i,i as g,E as x,h as Q,A as j,u as V}from"./avatarFunctions.6d66cf01.js";import{T as A}from"./SystemUpdateType.772fc25d.js";import{C as y,R as E,p as l,V as S,q as N,t as O,u as P,m as R,N as k,A as T}from"./[projectId].a008d20c.js";import{a as B}from"./AuthService.e8999ddc.js";import{t as D}from"./teleportRigidbody.0bf2d2c0.js";import"./index.7b02be28.js";import"./vendor.475cb2ff.js";import"./upload.bd537b46.js";import"./_app.f0a72417.js";import"./index.81138b53.js";import"./AlertService.5d8abaff.js";import"./feathers.32f4d4e8.js";function q(e){const u=V();R(e).when(k.teleportObject.matches,p=>{const[d,f,m,t,c,o,n]=p.pose,r=u.getNetworkObject(p.networkId),a=i(r,y);if(a){D(a.body,new C(d,f,m),new I(t,c,o,n));return}const s=i(r,T);if(s){const h=i(r,j);s.controller.setPosition(new C(d,f+h.avatarHalfHeight,m)),i(r,S).velocity.setScalar(0)}})}async function $(e,u){const p=b([y]),d=b([E]),f=b([l]),m=b([B,y]);return v.instance.addEventListener(v.EVENTS.ENABLE_SCENE,t=>{typeof t.physics!="undefined"}),e.receptors.add(q),()=>{for(const t of p.exit()){const c=i(t,y);c?.body&&e.physics.removeBody(c.body)}for(const t of d())e.physics.doRaycast(i(t,E));for(const t of p()){const c=i(t,S);if(!c)continue;const o=i(t,y),n=i(t,A),r=i(t,B);if(!(!g&&r.userId!==x.userId||Q(t,j))){if(N(o.body)){const a=o.body,s=a.getGlobalPose();c.velocity.subVectors(s.translation,n.position),s.translation.x=n.position.x,s.translation.y=n.position.y,s.translation.z=n.position.z,s.rotation.x=n.rotation.x,s.rotation.y=n.rotation.y,s.rotation.z=n.rotation.z,s.rotation.w=n.rotation.w,O(o.body)&&a.setKinematicTarget(s),a.setGlobalPose(s,!0)}else if(P(o.body)){const a=o.body,s=a.getLinearVelocity();c.velocity.copy(s);const h=a.getGlobalPose();n.position.copy(h.translation),n.rotation.copy(h.rotation)}}}if(!g)for(const t of m()){const c=i(t,y),o=i(t,A),n=c.body;D(n,o.position,o.rotation)}for(const t of f())i(t,l).collisions=[];for(const t of e.physics.collisionEventQueue){if(t.controllerID){const o=e.physics.controllers.get(t.controllerID).userData;i(o,l).collisions.push(t)}if(t.shapeA){const c=e.physics.bodyIDByShapeID.get(t.shapeA._id),o=e.physics.bodies.get(c),n=e.physics.bodyIDByShapeID.get(t.shapeB._id),r=e.physics.bodies.get(n);if(!o||!r)continue;const a=o.userData?.entity,s=o.userData?.entity;i(a,l).collisions.push({type:t.type,bodySelf:o,bodyOther:r,shapeSelf:t.shapeA,shapeOther:t.shapeB,contacts:t.contacts}),i(s,l).collisions.push({type:t.type,bodySelf:r,bodyOther:o,shapeSelf:t.shapeB,shapeOther:t.shapeA,contacts:t.contacts})}}e.physics.collisionEventQueue=[];for(let t=0;t<e.physics.substeps;t++)e.physics.scene.simulate(e.physics.stepTime/(1e3*e.physics.substeps),!0),e.physics.scene.fetchResults(!0)}}export{$ as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

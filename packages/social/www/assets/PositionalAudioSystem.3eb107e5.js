import{bx as O,by as w}from"./three.module.0404e109.js";import{c as _,d as f,A as U,E as i,b as m,g as n,a as x,h}from"./avatarFunctions.c7a0e273.js";import{D as s,z as j,E as C,L as Q}from"./[projectId].d5e44847.js";import{a as D}from"./AuthService.6db25508.js";import{MediaStreams as T}from"./MediaStreamSystem.f18f7a97.js";import{T as b}from"./SystemUpdateType.4e88f289.js";import"./index.0040ebb6.js";import"./vendor.c8b8cc93.js";import"./_app.009e96ac.js";import"./index.9af95596.js";import"./upload.38e3baaf.js";import"./AlertService.bfed2141.js";import"./feathers.081246a7.js";const c=_("AudioComponent"),R=typeof navigator!="undefined"&&/chrome/i.test(navigator.userAgent);function k(S){const u=new Audio;return u.setAttribute("autoplay","autoplay"),u.setAttribute("playsinline","playsinline"),u.srcObject=S,u.volume=0,u}async function Z(S){const u=f([s,b]),l=f([j,U]),I=f([j]),L=f([C]),d=new Map;i.useAudioSystem=!0,i.spatialAudio=!0;let y=!0,p=!1,v=!1;m.instance.addEventListener(m.EVENTS.START_SUSPENDED_CONTEXTS,()=>{p=!0,y=!1,console.log("starting suspended audio nodes")}),m.instance.addEventListener(m.EVENTS.SUSPEND_POSITIONAL_AUDIO,()=>{v=!0});let a;const M=(e,o=!0)=>{a.usePositionalAudio!=!1&&(e.setDistanceModel(a.mediaDistanceModel),e.setMaxDistance(a.mediaMaxDistance),e.setRefDistance(a.mediaRefDistance),e.setRolloffFactor(a.mediaRolloffFactor),o&&e.setVolume(a.mediaVolume))};return()=>{if(p){for(const e of l()){const o=a?.usePositionalAudio?n(e,s):n(e,c);o?.value?.context?.state==="suspended"&&o.value.context.resume()}p=!1}if(v){for(const e of l())(a?.usePositionalAudio?n(e,s):n(e,c)).value.context.suspend();v=!1}for(const e of L.enter())a=n(e,C);for(const e of I.exit()){const o=n(e,s)??n(e,c);o?.value?.source&&o.value.disconnect()}for(const e of l.enter()){const o=n(e,D);if(o){const t=o.uniqueId;T.instance?.consumers.find(r=>r.appData.peerId===t&&r.appData.mediaTag==="cam-audio")==null&&d.get(e)!=null&&d.delete(e)}if(a?.usePositionalAudio){const t=x(e,s,{value:new O(i.audioListener)});t.value.matrixAutoUpdate=!1,M(t.value),t!=null&&i.scene.add(t.value)}else{const t=x(e,c,{value:new w(i.audioListener)});t!=null&&i.scene.add(t.value),t.value.matrixAutoUpdate=!1}}for(const e of l.exit()){d.delete(e);const o=n(e,s);o!=null&&i.scene.remove(o.value);const t=n(e,c);t!=null&&i.scene.remove(t.value)}for(const e of u()){const o=n(e,s),t=n(e,b);o.value?.position.copy(t.position),o.value?.rotation.setFromQuaternion(t.rotation),y||o.value.updateMatrix()}for(const e of l()){if(h(e,Q))continue;const o=n(e,D);let t;if(o!=null){const N=o.uniqueId;t=T.instance?.consumers.find(g=>g.appData.peerId===N&&g.appData.mediaTag==="cam-audio")}if(d.has(e)&&t!=null&&t.id===d.get(e).id||!t)continue;const A=t.track;d.set(e,A);const r=n(e,s)??n(e,c),E=new MediaStream([A.clone()]);R&&k(E);const P=r.value.context.createMediaStreamSource(E);r.value.context.state==="suspended"&&r.value.context.resume(),r.value.setNodeSource(P)}}}export{Z as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9zaXRpb25hbEF1ZGlvU3lzdGVtLjNlYjEwN2U1LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9lbmdpbmUvc3JjL2F1ZGlvL2NvbXBvbmVudHMvQXVkaW9Db21wb25lbnQudHMiLCIuLi8uLi8uLi9lbmdpbmUvc3JjL2F1ZGlvL3N5c3RlbXMvUG9zaXRpb25hbEF1ZGlvU3lzdGVtLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF1ZGlvIH0gZnJvbSAndGhyZWUnXG5pbXBvcnQgeyBjcmVhdGVNYXBwZWRDb21wb25lbnQgfSBmcm9tICcuLi8uLi9lY3MvZnVuY3Rpb25zL0NvbXBvbmVudEZ1bmN0aW9ucydcblxuZXhwb3J0IHR5cGUgQXVkaW9Db21wb25lbnRUeXBlID0ge1xuICB2YWx1ZTogQXVkaW88R2Fpbk5vZGU+XG59XG5cbmV4cG9ydCBjb25zdCBBdWRpb0NvbXBvbmVudCA9IGNyZWF0ZU1hcHBlZENvbXBvbmVudDxBdWRpb0NvbXBvbmVudFR5cGU+KCdBdWRpb0NvbXBvbmVudCcpXG4iLCJpbXBvcnQgeyBQb3NpdGlvbmFsQXVkaW8sIEF1ZGlvIGFzIEF1ZGlvT2JqZWN0IH0gZnJvbSAndGhyZWUnXG5pbXBvcnQgeyBBdmF0YXJDb21wb25lbnQgfSBmcm9tICcuLi8uLi9hdmF0YXIvY29tcG9uZW50cy9BdmF0YXJDb21wb25lbnQnXG5pbXBvcnQgeyBFbmdpbmUgfSBmcm9tICcuLi8uLi9lY3MvY2xhc3Nlcy9FbmdpbmUnXG5pbXBvcnQgeyBMb2NhbElucHV0VGFnQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vaW5wdXQvY29tcG9uZW50cy9Mb2NhbElucHV0VGFnQ29tcG9uZW50J1xuaW1wb3J0IHsgTmV0d29ya09iamVjdENvbXBvbmVudCB9IGZyb20gJy4uLy4uL25ldHdvcmtpbmcvY29tcG9uZW50cy9OZXR3b3JrT2JqZWN0Q29tcG9uZW50J1xuaW1wb3J0IHsgRW5naW5lRXZlbnRzIH0gZnJvbSAnLi4vLi4vZWNzL2NsYXNzZXMvRW5naW5lRXZlbnRzJ1xuaW1wb3J0IHsgRW50aXR5IH0gZnJvbSAnLi4vLi4vZWNzL2NsYXNzZXMvRW50aXR5J1xuaW1wb3J0IHsgYWRkQ29tcG9uZW50LCBkZWZpbmVRdWVyeSwgZ2V0Q29tcG9uZW50LCBoYXNDb21wb25lbnQgfSBmcm9tICcuLi8uLi9lY3MvZnVuY3Rpb25zL0NvbXBvbmVudEZ1bmN0aW9ucydcbmltcG9ydCB7IE1lZGlhU3RyZWFtcyB9IGZyb20gJy4uLy4uL25ldHdvcmtpbmcvc3lzdGVtcy9NZWRpYVN0cmVhbVN5c3RlbSdcbmltcG9ydCB7XG4gIFBvc2l0aW9uYWxBdWRpb1NldHRpbmdzQ29tcG9uZW50LFxuICBQb3NpdGlvbmFsQXVkaW9TZXR0aW5nc0NvbXBvbmVudFR5cGVcbn0gZnJvbSAnLi4vLi4vc2NlbmUvY29tcG9uZW50cy9BdWRpb1NldHRpbmdzQ29tcG9uZW50J1xuaW1wb3J0IHsgVHJhbnNmb3JtQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vdHJhbnNmb3JtL2NvbXBvbmVudHMvVHJhbnNmb3JtQ29tcG9uZW50J1xuaW1wb3J0IHsgUG9zaXRpb25hbEF1ZGlvQ29tcG9uZW50IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3NpdGlvbmFsQXVkaW9Db21wb25lbnQnXG5pbXBvcnQgeyBBdWRpb1RhZ0NvbXBvbmVudCB9IGZyb20gJy4uL2NvbXBvbmVudHMvQXVkaW9UYWdDb21wb25lbnQnXG5pbXBvcnQgeyBBdWRpb0NvbXBvbmVudCB9IGZyb20gJy4uL2NvbXBvbmVudHMvQXVkaW9Db21wb25lbnQnXG5pbXBvcnQgeyBTeXN0ZW0gfSBmcm9tICcuLi8uLi9lY3MvY2xhc3Nlcy9TeXN0ZW0nXG5pbXBvcnQgeyBXb3JsZCB9IGZyb20gJy4uLy4uL2Vjcy9jbGFzc2VzL1dvcmxkJ1xuXG5jb25zdCBTSE9VTERfQ1JFQVRFX1NJTEVOVF9BVURJT19FTFMgPSB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiAvY2hyb21lL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KVxuZnVuY3Rpb24gY3JlYXRlU2lsZW50QXVkaW9FbChzdHJlYW1zTGl2ZSkge1xuICBjb25zdCBhdWRpb0VsID0gbmV3IEF1ZGlvKClcbiAgYXVkaW9FbC5zZXRBdHRyaWJ1dGUoJ2F1dG9wbGF5JywgJ2F1dG9wbGF5JylcbiAgYXVkaW9FbC5zZXRBdHRyaWJ1dGUoJ3BsYXlzaW5saW5lJywgJ3BsYXlzaW5saW5lJylcbiAgYXVkaW9FbC5zcmNPYmplY3QgPSBzdHJlYW1zTGl2ZVxuICBhdWRpb0VsLnZvbHVtZSA9IDAgLy8gd2UgZG9uJ3QgYWN0dWFsbHkgd2FudCB0byBoZWFyIGF1ZGlvIGZyb20gdGhpcyBlbGVtZW50XG4gIHJldHVybiBhdWRpb0VsXG59XG5cbi8qKiBTeXN0ZW0gY2xhc3Mgd2hpY2ggcHJvdmlkZXMgbWV0aG9kcyBmb3IgUG9zaXRpb25hbCBBdWRpbyBzeXN0ZW0uICovXG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIFBvc2l0aW9uYWxBdWRpb1N5c3RlbSh3b3JsZDogV29ybGQpOiBQcm9taXNlPFN5c3RlbT4ge1xuICBjb25zdCBwb3NpdGlvbmFsQXVkaW9RdWVyeSA9IGRlZmluZVF1ZXJ5KFtQb3NpdGlvbmFsQXVkaW9Db21wb25lbnQsIFRyYW5zZm9ybUNvbXBvbmVudF0pXG4gIGNvbnN0IGF2YXRhckF1ZGlvUXVlcnkgPSBkZWZpbmVRdWVyeShbQXVkaW9UYWdDb21wb25lbnQsIEF2YXRhckNvbXBvbmVudF0pXG4gIGNvbnN0IGF1ZGlvUXVlcnkgPSBkZWZpbmVRdWVyeShbQXVkaW9UYWdDb21wb25lbnRdKVxuICBjb25zdCBzZXR0aW5nc1F1ZXJ5ID0gZGVmaW5lUXVlcnkoW1Bvc2l0aW9uYWxBdWRpb1NldHRpbmdzQ29tcG9uZW50XSlcblxuICBjb25zdCBhdmF0YXJBdWRpb1N0cmVhbTogTWFwPEVudGl0eSwgYW55PiA9IG5ldyBNYXAoKVxuXG4gIEVuZ2luZS51c2VBdWRpb1N5c3RlbSA9IHRydWVcbiAgRW5naW5lLnNwYXRpYWxBdWRpbyA9IHRydWVcblxuICBsZXQgYXVkaW9Db250ZXh0U3VzcGVuZGVkID0gdHJ1ZVxuICBsZXQgc3RhcnRTdXNwZW5kZWRDb250ZXh0cyA9IGZhbHNlXG4gIGxldCBzdXNwZW5kUG9zaXRpb25hbEF1ZGlvID0gZmFsc2VcblxuICBFbmdpbmVFdmVudHMuaW5zdGFuY2UuYWRkRXZlbnRMaXN0ZW5lcihFbmdpbmVFdmVudHMuRVZFTlRTLlNUQVJUX1NVU1BFTkRFRF9DT05URVhUUywgKCkgPT4ge1xuICAgIHN0YXJ0U3VzcGVuZGVkQ29udGV4dHMgPSB0cnVlXG4gICAgYXVkaW9Db250ZXh0U3VzcGVuZGVkID0gZmFsc2VcbiAgICBjb25zb2xlLmxvZygnc3RhcnRpbmcgc3VzcGVuZGVkIGF1ZGlvIG5vZGVzJylcbiAgfSlcblxuICBFbmdpbmVFdmVudHMuaW5zdGFuY2UuYWRkRXZlbnRMaXN0ZW5lcihFbmdpbmVFdmVudHMuRVZFTlRTLlNVU1BFTkRfUE9TSVRJT05BTF9BVURJTywgKCkgPT4ge1xuICAgIHN1c3BlbmRQb3NpdGlvbmFsQXVkaW8gPSB0cnVlXG4gIH0pXG5cbiAgbGV0IHBvc2l0aW9uYWxBdWRpb1NldHRpbmdzOiBSZXR1cm5UeXBlPHR5cGVvZiBQb3NpdGlvbmFsQXVkaW9TZXR0aW5nc0NvbXBvbmVudC5nZXQ+XG5cbiAgY29uc3QgYXBwbHlNZWRpYUF1ZGlvU2V0dGluZ3MgPSAocG9zaXRpb25hbEF1ZGlvLCBzZXRWb2x1bWUgPSB0cnVlKSA9PiB7XG4gICAgaWYgKHBvc2l0aW9uYWxBdWRpb1NldHRpbmdzLnVzZVBvc2l0aW9uYWxBdWRpbyA9PSBmYWxzZSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIHBvc2l0aW9uYWxBdWRpby5zZXREaXN0YW5jZU1vZGVsKHBvc2l0aW9uYWxBdWRpb1NldHRpbmdzLm1lZGlhRGlzdGFuY2VNb2RlbClcbiAgICBwb3NpdGlvbmFsQXVkaW8uc2V0TWF4RGlzdGFuY2UocG9zaXRpb25hbEF1ZGlvU2V0dGluZ3MubWVkaWFNYXhEaXN0YW5jZSlcbiAgICBwb3NpdGlvbmFsQXVkaW8uc2V0UmVmRGlzdGFuY2UocG9zaXRpb25hbEF1ZGlvU2V0dGluZ3MubWVkaWFSZWZEaXN0YW5jZSlcbiAgICBwb3NpdGlvbmFsQXVkaW8uc2V0Um9sbG9mZkZhY3Rvcihwb3NpdGlvbmFsQXVkaW9TZXR0aW5ncy5tZWRpYVJvbGxvZmZGYWN0b3IpXG4gICAgaWYgKHNldFZvbHVtZSkgcG9zaXRpb25hbEF1ZGlvLnNldFZvbHVtZShwb3NpdGlvbmFsQXVkaW9TZXR0aW5ncy5tZWRpYVZvbHVtZSlcbiAgfVxuXG4gIHJldHVybiAoKSA9PiB7XG4gICAgaWYgKHN0YXJ0U3VzcGVuZGVkQ29udGV4dHMpIHtcbiAgICAgIGZvciAoY29uc3QgZW50aXR5IG9mIGF2YXRhckF1ZGlvUXVlcnkoKSkge1xuICAgICAgICBjb25zdCBhdWRpbyA9IHBvc2l0aW9uYWxBdWRpb1NldHRpbmdzPy51c2VQb3NpdGlvbmFsQXVkaW9cbiAgICAgICAgICA/IGdldENvbXBvbmVudChlbnRpdHksIFBvc2l0aW9uYWxBdWRpb0NvbXBvbmVudClcbiAgICAgICAgICA6IGdldENvbXBvbmVudChlbnRpdHksIEF1ZGlvQ29tcG9uZW50KVxuICAgICAgICBpZiAoYXVkaW8/LnZhbHVlPy5jb250ZXh0Py5zdGF0ZSA9PT0gJ3N1c3BlbmRlZCcpIGF1ZGlvLnZhbHVlLmNvbnRleHQucmVzdW1lKClcbiAgICAgIH1cbiAgICAgIHN0YXJ0U3VzcGVuZGVkQ29udGV4dHMgPSBmYWxzZVxuICAgIH1cblxuICAgIGlmIChzdXNwZW5kUG9zaXRpb25hbEF1ZGlvKSB7XG4gICAgICBmb3IgKGNvbnN0IGVudGl0eSBvZiBhdmF0YXJBdWRpb1F1ZXJ5KCkpIHtcbiAgICAgICAgY29uc3QgYXVkaW8gPSBwb3NpdGlvbmFsQXVkaW9TZXR0aW5ncz8udXNlUG9zaXRpb25hbEF1ZGlvXG4gICAgICAgICAgPyBnZXRDb21wb25lbnQoZW50aXR5LCBQb3NpdGlvbmFsQXVkaW9Db21wb25lbnQpXG4gICAgICAgICAgOiBnZXRDb21wb25lbnQoZW50aXR5LCBBdWRpb0NvbXBvbmVudClcbiAgICAgICAgYXVkaW8udmFsdWUuY29udGV4dC5zdXNwZW5kKClcbiAgICAgIH1cbiAgICAgIHN1c3BlbmRQb3NpdGlvbmFsQXVkaW8gPSBmYWxzZVxuICAgIH1cblxuICAgIGZvciAoY29uc3QgZW50aXR5IG9mIHNldHRpbmdzUXVlcnkuZW50ZXIoKSkge1xuICAgICAgcG9zaXRpb25hbEF1ZGlvU2V0dGluZ3MgPSBnZXRDb21wb25lbnQoZW50aXR5LCBQb3NpdGlvbmFsQXVkaW9TZXR0aW5nc0NvbXBvbmVudClcbiAgICB9XG5cbiAgICBmb3IgKGNvbnN0IGVudGl0eSBvZiBhdWRpb1F1ZXJ5LmV4aXQoKSkge1xuICAgICAgY29uc3QgcG9zaXRpb25hbEF1ZGlvID0gZ2V0Q29tcG9uZW50KGVudGl0eSwgUG9zaXRpb25hbEF1ZGlvQ29tcG9uZW50KSA/PyBnZXRDb21wb25lbnQoZW50aXR5LCBBdWRpb0NvbXBvbmVudClcbiAgICAgIGlmIChwb3NpdGlvbmFsQXVkaW8/LnZhbHVlPy5zb3VyY2UpIHBvc2l0aW9uYWxBdWRpby52YWx1ZS5kaXNjb25uZWN0KClcbiAgICB9XG5cbiAgICBmb3IgKGNvbnN0IGVudGl0eSBvZiBhdmF0YXJBdWRpb1F1ZXJ5LmVudGVyKCkpIHtcbiAgICAgIGNvbnN0IGVudGl0eU5ldHdvcmtPYmplY3QgPSBnZXRDb21wb25lbnQoZW50aXR5LCBOZXR3b3JrT2JqZWN0Q29tcG9uZW50KVxuICAgICAgaWYgKGVudGl0eU5ldHdvcmtPYmplY3QpIHtcbiAgICAgICAgY29uc3QgcGVlcklkID0gZW50aXR5TmV0d29ya09iamVjdC51bmlxdWVJZFxuICAgICAgICBjb25zdCBjb25zdW1lciA9IE1lZGlhU3RyZWFtcy5pbnN0YW5jZT8uY29uc3VtZXJzLmZpbmQoXG4gICAgICAgICAgKGM6IGFueSkgPT4gYy5hcHBEYXRhLnBlZXJJZCA9PT0gcGVlcklkICYmIGMuYXBwRGF0YS5tZWRpYVRhZyA9PT0gJ2NhbS1hdWRpbydcbiAgICAgICAgKVxuICAgICAgICBpZiAoY29uc3VtZXIgPT0gbnVsbCAmJiBhdmF0YXJBdWRpb1N0cmVhbS5nZXQoZW50aXR5KSAhPSBudWxsKSB7XG4gICAgICAgICAgYXZhdGFyQXVkaW9TdHJlYW0uZGVsZXRlKGVudGl0eSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHBvc2l0aW9uYWxBdWRpb1NldHRpbmdzPy51c2VQb3NpdGlvbmFsQXVkaW8pIHtcbiAgICAgICAgY29uc3QgcG9zaXRpb25hbEF1ZGlvID0gYWRkQ29tcG9uZW50KGVudGl0eSwgUG9zaXRpb25hbEF1ZGlvQ29tcG9uZW50LCB7XG4gICAgICAgICAgdmFsdWU6IG5ldyBQb3NpdGlvbmFsQXVkaW8oRW5naW5lLmF1ZGlvTGlzdGVuZXIpXG4gICAgICAgIH0pXG4gICAgICAgIHBvc2l0aW9uYWxBdWRpby52YWx1ZS5tYXRyaXhBdXRvVXBkYXRlID0gZmFsc2VcbiAgICAgICAgYXBwbHlNZWRpYUF1ZGlvU2V0dGluZ3MocG9zaXRpb25hbEF1ZGlvLnZhbHVlKVxuICAgICAgICBpZiAocG9zaXRpb25hbEF1ZGlvICE9IG51bGwpIEVuZ2luZS5zY2VuZS5hZGQocG9zaXRpb25hbEF1ZGlvLnZhbHVlKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgYXVkaW8gPSBhZGRDb21wb25lbnQoZW50aXR5LCBBdWRpb0NvbXBvbmVudCwgeyB2YWx1ZTogbmV3IEF1ZGlvT2JqZWN0PEdhaW5Ob2RlPihFbmdpbmUuYXVkaW9MaXN0ZW5lcikgfSlcbiAgICAgICAgaWYgKGF1ZGlvICE9IG51bGwpIEVuZ2luZS5zY2VuZS5hZGQoYXVkaW8udmFsdWUpXG4gICAgICAgIGF1ZGlvLnZhbHVlLm1hdHJpeEF1dG9VcGRhdGUgPSBmYWxzZVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAoY29uc3QgZW50aXR5IG9mIGF2YXRhckF1ZGlvUXVlcnkuZXhpdCgpKSB7XG4gICAgICBhdmF0YXJBdWRpb1N0cmVhbS5kZWxldGUoZW50aXR5KVxuXG4gICAgICBjb25zdCBwb3NpdGlvbmFsQXVkaW8gPSBnZXRDb21wb25lbnQoZW50aXR5LCBQb3NpdGlvbmFsQXVkaW9Db21wb25lbnQpXG4gICAgICBpZiAocG9zaXRpb25hbEF1ZGlvICE9IG51bGwpIEVuZ2luZS5zY2VuZS5yZW1vdmUocG9zaXRpb25hbEF1ZGlvLnZhbHVlKVxuXG4gICAgICBjb25zdCBhdWRpbyA9IGdldENvbXBvbmVudChlbnRpdHksIEF1ZGlvQ29tcG9uZW50KVxuICAgICAgaWYgKGF1ZGlvICE9IG51bGwpIEVuZ2luZS5zY2VuZS5yZW1vdmUoYXVkaW8udmFsdWUpXG4gICAgfVxuXG4gICAgZm9yIChjb25zdCBlbnRpdHkgb2YgcG9zaXRpb25hbEF1ZGlvUXVlcnkoKSkge1xuICAgICAgY29uc3QgcG9zaXRpb25hbEF1ZGlvID0gZ2V0Q29tcG9uZW50KGVudGl0eSwgUG9zaXRpb25hbEF1ZGlvQ29tcG9uZW50KVxuICAgICAgY29uc3QgdHJhbnNmb3JtID0gZ2V0Q29tcG9uZW50KGVudGl0eSwgVHJhbnNmb3JtQ29tcG9uZW50KVxuXG4gICAgICBwb3NpdGlvbmFsQXVkaW8udmFsdWU/LnBvc2l0aW9uLmNvcHkodHJhbnNmb3JtLnBvc2l0aW9uKVxuICAgICAgcG9zaXRpb25hbEF1ZGlvLnZhbHVlPy5yb3RhdGlvbi5zZXRGcm9tUXVhdGVybmlvbih0cmFuc2Zvcm0ucm90YXRpb24pXG5cbiAgICAgIGlmICghYXVkaW9Db250ZXh0U3VzcGVuZGVkKSB7XG4gICAgICAgIHBvc2l0aW9uYWxBdWRpby52YWx1ZS51cGRhdGVNYXRyaXgoKVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAoY29uc3QgZW50aXR5IG9mIGF2YXRhckF1ZGlvUXVlcnkoKSkge1xuICAgICAgaWYgKGhhc0NvbXBvbmVudChlbnRpdHksIExvY2FsSW5wdXRUYWdDb21wb25lbnQpKSB7XG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG4gICAgICBjb25zdCBlbnRpdHlOZXR3b3JrT2JqZWN0ID0gZ2V0Q29tcG9uZW50KGVudGl0eSwgTmV0d29ya09iamVjdENvbXBvbmVudClcbiAgICAgIGxldCBjb25zdW1lclxuICAgICAgaWYgKGVudGl0eU5ldHdvcmtPYmplY3QgIT0gbnVsbCkge1xuICAgICAgICBjb25zdCBwZWVySWQgPSBlbnRpdHlOZXR3b3JrT2JqZWN0LnVuaXF1ZUlkXG4gICAgICAgIGNvbnN1bWVyID0gTWVkaWFTdHJlYW1zLmluc3RhbmNlPy5jb25zdW1lcnMuZmluZChcbiAgICAgICAgICAoYzogYW55KSA9PiBjLmFwcERhdGEucGVlcklkID09PSBwZWVySWQgJiYgYy5hcHBEYXRhLm1lZGlhVGFnID09PSAnY2FtLWF1ZGlvJ1xuICAgICAgICApXG4gICAgICB9XG5cbiAgICAgIGlmIChhdmF0YXJBdWRpb1N0cmVhbS5oYXMoZW50aXR5KSAmJiBjb25zdW1lciAhPSBudWxsICYmIGNvbnN1bWVyLmlkID09PSBhdmF0YXJBdWRpb1N0cmVhbS5nZXQoZW50aXR5KS5pZCkge1xuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBpZiAoIWNvbnN1bWVyKSB7XG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGNvbnN1bWVyTGl2ZSA9IGNvbnN1bWVyLnRyYWNrXG4gICAgICBhdmF0YXJBdWRpb1N0cmVhbS5zZXQoZW50aXR5LCBjb25zdW1lckxpdmUpXG4gICAgICBjb25zdCBhdmF0YXJBdWRpbyA9IGdldENvbXBvbmVudChlbnRpdHksIFBvc2l0aW9uYWxBdWRpb0NvbXBvbmVudCkgPz8gZ2V0Q29tcG9uZW50KGVudGl0eSwgQXVkaW9Db21wb25lbnQpXG4gICAgICBjb25zdCBzdHJlYW1zTGl2ZSA9IG5ldyBNZWRpYVN0cmVhbShbY29uc3VtZXJMaXZlLmNsb25lKCldKVxuXG4gICAgICBpZiAoU0hPVUxEX0NSRUFURV9TSUxFTlRfQVVESU9fRUxTKSB7XG4gICAgICAgIGNyZWF0ZVNpbGVudEF1ZGlvRWwoc3RyZWFtc0xpdmUpIC8vIFRPRE86IERvIHRoZSBhdWRpbyBlbHMgbmVlZCB0byBnZXQgY2xlYW5lZCB1cD9cbiAgICAgIH1cblxuICAgICAgY29uc3QgYXVkaW9TdHJlYW1Tb3VyY2UgPSBhdmF0YXJBdWRpby52YWx1ZS5jb250ZXh0LmNyZWF0ZU1lZGlhU3RyZWFtU291cmNlKHN0cmVhbXNMaXZlKVxuICAgICAgaWYgKGF2YXRhckF1ZGlvLnZhbHVlLmNvbnRleHQuc3RhdGUgPT09ICdzdXNwZW5kZWQnKSBhdmF0YXJBdWRpby52YWx1ZS5jb250ZXh0LnJlc3VtZSgpXG5cbiAgICAgIGF2YXRhckF1ZGlvLnZhbHVlLnNldE5vZGVTb3VyY2UoYXVkaW9TdHJlYW1Tb3VyY2UgYXMgdW5rbm93biBhcyBBdWRpb0J1ZmZlclNvdXJjZU5vZGUpXG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsiQXVkaW9PYmplY3QiXSwibWFwcGluZ3MiOiI2a0JBT2EsR0FBaUIsRUFBMEMsa0JDYWxFLEVBQWlDLE1BQU8sWUFBYyxhQUFlLFVBQVUsS0FBSyxVQUFVLFdBQ3BHLFdBQTZCLEVBQWEsTUFDbEMsR0FBVSxHQUFJLGdCQUNaLGFBQWEsV0FBWSxjQUN6QixhQUFhLGNBQWUsaUJBQzVCLFVBQVksSUFDWixPQUFTLEVBQ1YsbUJBSzJDLEVBQStCLE1BQzNFLEdBQXVCLEVBQVksQ0FBQyxFQUEwQixJQUM5RCxFQUFtQixFQUFZLENBQUMsRUFBbUIsSUFDbkQsRUFBYSxFQUFZLENBQUMsSUFDMUIsRUFBZ0IsRUFBWSxDQUFDLElBRTdCLEVBQXNDLEdBQUksT0FFekMsZUFBaUIsS0FDakIsYUFBZSxNQUVsQixHQUF3QixHQUN4QixFQUF5QixHQUN6QixFQUF5QixLQUVoQixTQUFTLGlCQUFpQixFQUFhLE9BQU8seUJBQTBCLElBQU0sR0FDaEUsS0FDRCxXQUNoQixJQUFJLHNDQUdELFNBQVMsaUJBQWlCLEVBQWEsT0FBTyx5QkFBMEIsSUFBTSxHQUNoRSxRQUd2QixRQUVFLEdBQTBCLENBQUMsRUFBaUIsRUFBWSxLQUFTLENBQ2pFLEVBQXdCLG9CQUFz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

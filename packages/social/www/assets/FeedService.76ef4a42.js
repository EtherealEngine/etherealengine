import{A as E}from"./AlertService.5d8abaff.js";import{c as i}from"./feathers.32f4d4e8.js";import{u as c}from"./upload.bd537b46.js";import{k as f}from"./_app.f0a72417.js";const a={feedsRetrieved:e=>({type:"FEEDS_RETRIEVED",feeds:e}),feedsFeaturedRetrieved:e=>({type:"FEEDS_FEATURED_RETRIEVED",feeds:e}),feedsCreatorRetrieved:e=>({type:"FEEDS_CREATOR_RETRIEVED",feeds:e}),feedsBookmarkRetrieved:e=>({type:"FEEDS_BOOKMARK_RETRIEVED",feeds:e}),feedsFiredRetrieved:e=>({type:"FEEDS_FIRED_RETRIEVED",feeds:e}),feedsMyFeaturedRetrieved:e=>({type:"FEEDS_MY_FEATURED_RETRIEVED",feeds:e}),feedRetrieved:e=>({type:"FEED_RETRIEVED",feed:e}),fetchingFeeds:()=>({type:"FEEDS_FETCH"}),fetchingFeaturedFeeds:()=>({type:"FEATURED_FEEDS_FETCH"}),fetchingCreatorFeeds:()=>({type:"CREATOR_FEEDS_FETCH"}),fetchingBookmarkedFeeds:()=>({type:"BOOKMARK_FEEDS_FETCH"}),fetchingFiredFeeds:()=>({type:"FIRED_FEEDS_FETCH"}),fetchingMyFeaturedFeeds:()=>({type:"MY_FEATURED_FEEDS_FETCH"}),fetchingAdminFeeds:()=>({type:"ADMIN_FEEDS_FETCH"}),addFeedFire:e=>({type:"ADD_FEED_FIRES",feedId:e}),feedAsFeatured:e=>({type:"ADD_FEED_FEATURED",feedId:e}),feedNotFeatured:e=>({type:"REMOVE_FEED_FEATURED",feedId:e}),removeFeedFire:e=>({type:"REMOVE_FEED_FIRES",feedId:e}),addFeedBookmark:e=>({type:"ADD_FEED_BOOKMARK",feedId:e}),removeFeedBookmark:e=>({type:"REMOVE_FEED_BOOKMARK",feedId:e}),addFeedView:e=>({type:"ADD_FEED_VIEW",feedId:e}),deleteFeed:e=>({type:"DELETE_FEED",feedId:e}),addFeed:e=>({type:"ADD_FEED",feed:e}),feedsAdminRetrieved:e=>({type:"FEEDS_AS_ADMIN_RETRIEVED",feeds:e}),updateFeedInList:e=>({type:"UPDATE_FEED",feed:e}),reduxClearCreatorFeatured:()=>({type:"CLEAR_CREATOR_FEATURED"}),lastFeedVideoUrl:e=>({type:"LAST_FEED_VIDEO_URL",filePath:e}),addFeedReport:e=>({type:"ADD_FEED_REPORT",feedId:e}),addFeedLike:e=>({type:"ADD_FEED_LIKES",feedId:e}),removeFeedLike:e=>({type:"REMOVE_FEED_LIKES",feedId:e})},v={getFeeds:(e,r,t)=>async(d,o)=>{try{const n=[];if(e&&(e==="featured"||e==="featuredGuest")){d(a.fetchingFeaturedFeeds());const s=await i.service("feed").find({query:{action:e}});d(a.feedsFeaturedRetrieved(s.data))}else if(e&&e==="creator"){d(a.fetchingCreatorFeeds());const s=await i.service("feed").find({query:{action:"creator",creatorId:r}});d(a.feedsCreatorRetrieved(s.data))}else if(e&&e==="fired"){d(a.fetchingFiredFeeds());const s=await i.service("feed").find({query:{action:"fired",creatorId:r}});d(a.feedsFiredRetrieved(s.data))}else if(e&&e==="bookmark"){d(a.fetchingBookmarkedFeeds());const s=await i.service("feed").find({query:{action:"bookmark",creatorId:r}});d(a.feedsBookmarkRetrieved(s.data))}else if(e&&e==="myFeatured"){d(a.fetchingMyFeaturedFeeds());const s=await i.service("feed").find({query:{action:"myFeatured",creatorId:r}});d(a.feedsMyFeaturedRetrieved(s.data))}else if(e&&e==="admin"){if(f().user.userRole.value==="admin"){d(a.fetchingAdminFeeds());const F=await i.service("feed").find({query:{action:"admin"}});d(a.feedsAdminRetrieved(F))}}else{const s=await i.service("feed").find({query:{action:e||""}});d(a.feedsRetrieved(s.data))}}catch(n){console.log(n),E.dispatchAlertError(d,n.message)}},getFeed:e=>async r=>{try{r(a.fetchingFeeds());const t=await i.service("feed").get(e);r(a.feedRetrieved(t))}catch(t){console.log(t),E.dispatchAlertError(r,t.message)}},addViewToFeed:e=>async r=>{try{await i.service("feed").patch(e,{viewsCount:e}),r(a.addFeedView(e))}catch(t){console.log(t),E.dispatchAlertError(r,t.message)}},createFeed:({title:e,description:r,video:t,preview:d})=>async o=>{try{o(a.fetchingFeeds());const n=await c(t,null),s=await c(d,null);if(n&&s){const F=await i.service("feed").create({title:e,description:r,videoId:n.file_id,previewId:s.file_id});return o(a.addFeed(F)),{video:n.origin,preview:s.origin}}}catch(n){console.log(n),E.dispatchAlertError(o,n.message)}},updateFeedAsAdmin:(e,r)=>async t=>{try{if(r.video){const o=await c(r.video,null);r.videoId=o.file_id,delete r.video}if(r.preview){const o=await c(r.preview,null);r.previewId=o.file_id,delete r.preview}const d=await i.service("feed").patch(e,r);t(a.updateFeedInList(d))}catch(d){console.log(d),E.dispatchAlertError(t,d.message)}},setFeedAsFeatured:e=>async r=>{try{await i.service("feed").patch(e,{featured:1}),r(a.feedAsFeatured(e))}catch(t){console.log(t),E.dispatchAlertError(r,t.message)}},setFeedNotFeatured:e=>async r=>{try{await i.service("feed").patch(e,{featured:0}),r(a.feedNotFeatured(e))}catch(t){console.log(t),E.dispatchAlertError(r,t.message)}},removeFeed:(e,r,t)=>async d=>{try{const o=n=>n.split("/").sort((F,u)=>u.length-F.length)[0];await i.service("static-resource").remove(o(r)),await i.service("static-resource").remove(o(t)),await i.service("feed").remove(e),d(a.deleteFeed(e))}catch(o){console.log(o),E.dispatchAlertError(d,o.message)}},clearCreatorFeatured:()=>async e=>{e(a.reduxClearCreatorFeatured())},setLastFeedVideoUrl:e=>async r=>{try{r(a.lastFeedVideoUrl(e))}catch(t){console.log(t),E.dispatchAlertError(r,t.message)}}};export{v as F,a};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

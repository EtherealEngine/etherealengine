import{Q as b,V as w,G as s}from"./three.module.493739a3.js";import{c as D,g as r,a as y,r as A,d as g,A as l,u as G,h as C,E as T}from"./avatarFunctions.6d66cf01.js";import{R as h,k as X,X as m,O as R,m as E,N as v,C as M,A as V,V as k}from"./[projectId].a008d20c.js";import{T as q}from"./SystemUpdateType.772fc25d.js";import{t as F}from"./teleportRigidbody.0bf2d2c0.js";import{X as f}from"./XRHandsInputComponent.3d76e9a2.js";import{i as L}from"./addControllerModels.14512c2e.js";import"./index.7b02be28.js";import"./vendor.475cb2ff.js";import"./_app.f0a72417.js";import"./AuthService.e8999ddc.js";import"./AlertService.5d8abaff.js";import"./feathers.32f4d4e8.js";import"./index.81138b53.js";import"./upload.bd537b46.js";const x=D("TriggerDetectedComponent"),O=i=>{const a=r(i,h),e=a.hits[0]?.body?.userData?.entity;if(e&&typeof e!="undefined"){let t=r(e,X);if(t&&!t.active){t.active=!0,console.log("trigger active"),y(e,x,{});const p=setInterval(()=>{t.active&&a.hits[0]?.body.userData.entity!==e&&(console.log("removing trigger"),t.active=!1,A(e,x),clearInterval(p))},100)}}};function U(i){const a=G();E(i).when(v.setXRMode.matchesFromAny,e=>{if(e.$from!==a.hostId&&e.$from!==e.userId)return;const t=a.getUserAvatarEntity(e.userId);!t||(e.enabled?C(t,m)||y(t,m,{controllerLeft:new s,controllerRight:new s,controllerGripLeft:new s,controllerGripRight:new s,container:new s,head:new s}):C(t,m)&&A(t,m))}).when(v.xrHandsConnected.matchesFromAny,e=>{if(e.userId===T.userId)return;const t=a.getUserAvatarEntity(e.userId);if(!t)return;C(t,f)||y(t,f,{hands:[new s,new s]}),r(t,f).hands.forEach((n,o)=>{L(n,o===0?"left":"right")})}).when(v.teleportObject.matches,e=>{const[t,p,n,o,d,c,H]=e.pose,u=a.getNetworkObject(e.networkId),j=r(u,M);if(j){F(j.body,new w(t,p,n),new b(o,d,c,H));return}const I=r(u,V);if(I){const S=r(u,k),Q=r(u,l);I.controller.setPosition({x:t,y:p+Q.avatarHalfHeight,z:n}),S.velocity.setScalar(0)}})}async function rt(i){i.receptors.add(U);const a=new b().setFromAxisAngle(new w(0,1,0),Math.PI),e=g([l,h]),t=g([l,m]),p=g([l,f]);return()=>{for(const n of t.enter(i)){const o=r(n,m),d=r(n,R);o.container.add(o.controllerLeft,o.controllerGripLeft,o.controllerRight,o.controllerGripRight),o.container.applyQuaternion(a),d.value.add(o.container,o.head)}for(const n of p.enter(i)){const o=r(n,f),d=r(n,R),c=new s;c.add(...o.hands),c.applyQuaternion(a),d.value.add(c)}for(const n of e(i)){const o=r(n,h),d=r(n,q),c=r(n,l);o.origin.copy(d.position).y+=c.avatarHalfHeight,c.isGrounded=Boolean(o.hits.length>0),O(n)}}}export{rt as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

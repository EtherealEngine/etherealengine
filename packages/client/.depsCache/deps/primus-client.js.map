{
  "version": 3,
  "sources": ["../../../../node_modules/primus-client/index.js"],
  "sourcesContent": ["/* eslint-disable */\n\n(function UMDish(name, context, definition, plugins) {\n  context[name] = definition.call(context);\n  for (let i = 0; i < plugins.length; i++) {\n    plugins[i](context[name]);\n  }\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = context[name];\n  } else if (typeof define === 'function' && define.amd) {\n    define(function reference() { return context[name]; });\n  }\n}('Primus', this || {}, function wrapper() {\n  let define; let module; let exports;\n  const Primus = (function () { function r(e, n, t) { function o(i, f) { if (!n[i]) { if (!e[i]) { const c = typeof require === 'function' && require; if (!f && c) return c(i, !0); if (u) return u(i, !0); const a = new Error(`Cannot find module '${i}'`); throw a.code = 'MODULE_NOT_FOUND', a; } const p = n[i] = { exports: {} }; e[i][0].call(p.exports, function (r) { const n = e[i][1][r]; return o(n || r); }, p, p.exports, r, e, n, t); } return n[i].exports; } for (var u = typeof require === 'function' && require, i = 0; i < t.length; i++)o(t[i]); return o; } return r; }())({ 1: [function (_dereq_, module, exports) {\n    /**\n * Create a function that will cleanup the instance.\n *\n * @param {Array|String} keys Properties on the instance that needs to be cleared.\n * @param {Object} options Additional configuration.\n * @returns {Function} Destroy function\n * @api public\n */\n    module.exports = function demolish(keys, options) {\n      const split = /[, ]+/;\n\n      options = options || {};\n      keys = keys || [];\n\n      if (typeof keys === 'string') keys = keys.split(split);\n\n      /**\n   * Run addition cleanup hooks.\n   *\n   * @param {String} key Name of the clean up hook to run.\n   * @param {Mixed} selfie Reference to the instance we're cleaning up.\n   * @api private\n   */\n      function run(key, selfie) {\n        if (!options[key]) return;\n        if (typeof options[key] === 'string') options[key] = options[key].split(split);\n        if (typeof options[key] === 'function') return options[key].call(selfie);\n\n        for (var i = 0, type, what; i < options[key].length; i++) {\n          what = options[key][i];\n          type = typeof what;\n\n          if (type === 'function') {\n            what.call(selfie);\n          } else if (type === 'string' && typeof selfie[what] === 'function') {\n            selfie[what]();\n          }\n        }\n      }\n\n      /**\n   * Destroy the instance completely and clean up all the existing references.\n   *\n   * @returns {Boolean}\n   * @api public\n   */\n      return function destroy() {\n        const selfie = this;\n        let i = 0;\n        let prop;\n\n        if (selfie[keys[0]] === null) return false;\n        run('before', selfie);\n\n        for (; i < keys.length; i++) {\n          prop = keys[i];\n\n          if (selfie[prop]) {\n            if (typeof selfie[prop].destroy === 'function') selfie[prop].destroy();\n            selfie[prop] = null;\n          }\n        }\n\n        if (selfie.emit) selfie.emit('destroy');\n        run('after', selfie);\n\n        return true;\n      };\n    };\n  }, {}],\n  2: [function (_dereq_, module, exports) {\n    /**\n * Returns a function that when invoked executes all the listeners of the\n * given event with the given arguments.\n *\n * @returns {Function} The function that emits all the things.\n * @api public\n */\n    module.exports = function emits() {\n      const self = this;\n      let parser;\n\n      for (var i = 0, l = arguments.length, args = new Array(l); i < l; i++) {\n        args[i] = arguments[i];\n      }\n\n      //\n      // If the last argument is a function, assume that it's a parser.\n      //\n      if (typeof args[args.length - 1] !== 'function') {\n        return function emitter() {\n          for (var i = 0, l = arguments.length, arg = new Array(l); i < l; i++) {\n            arg[i] = arguments[i];\n          }\n\n          return self.emit.apply(self, args.concat(arg));\n        };\n      }\n\n      parser = args.pop();\n\n      /**\n   * The actual function that emits the given event. It returns a boolean\n   * indicating if the event was emitted.\n   *\n   * @returns {Boolean}\n   * @api public\n   */\n      return function emitter() {\n        for (var i = 0, l = arguments.length, arg = new Array(l + 1); i < l; i++) {\n          arg[i + 1] = arguments[i];\n        }\n\n        /**\n     * Async completion method for the parser.\n     *\n     * @param {Error} err Optional error when parsing failed.\n     * @param {Mixed} returned Emit instructions.\n     * @api private\n     */\n        arg[0] = function next(err, returned) {\n          if (err) return self.emit('error', err);\n\n          arg = returned === undefined\n            ? arg.slice(1) : returned === null\n              ? [] : returned;\n\n          self.emit.apply(self, args.concat(arg));\n        };\n\n        parser.apply(self, arg);\n        return true;\n      };\n    };\n  }, {}],\n  3: [function (_dereq_, module, exports) {\n    const has = Object.prototype.hasOwnProperty;\n    let prefix = '~';\n\n    /**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\n    function Events() {}\n\n    //\n    // We try to not inherit from `Object.prototype`. In some engines creating an\n    // instance in this way is faster than calling `Object.create(null)` directly.\n    // If `Object.create(null)` is not supported we prefix the event names with a\n    // character to make sure that the built-in object properties are not\n    // overridden or used as an attack vector.\n    //\n    if (Object.create) {\n      Events.prototype = Object.create(null);\n\n      //\n      // This hack is needed because the `__proto__` property is still inherited in\n      // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n      //\n      if (!new Events().__proto__) prefix = false;\n    }\n\n    /**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\n    function EE(fn, context, once) {\n      this.fn = fn;\n      this.context = context;\n      this.once = once || false;\n    }\n\n    /**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\n    function addListener(emitter, event, fn, context, once) {\n      if (typeof fn !== 'function') {\n        throw new TypeError('The listener must be a function');\n      }\n\n      const listener = new EE(fn, context || emitter, once);\n      const evt = prefix ? prefix + event : event;\n\n      if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n      else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n      else emitter._events[evt] = [emitter._events[evt], listener];\n\n      return emitter;\n    }\n\n    /**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\n    function clearEvent(emitter, evt) {\n      if (--emitter._eventsCount === 0) emitter._events = new Events();\n      else delete emitter._events[evt];\n    }\n\n    /**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\n    function EventEmitter() {\n      this._events = new Events();\n      this._eventsCount = 0;\n    }\n\n    /**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\n    EventEmitter.prototype.eventNames = function eventNames() {\n      const names = [];\n      let events;\n      let name;\n\n      if (this._eventsCount === 0) return names;\n\n      for (name in (events = this._events)) {\n        if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n      }\n\n      if (Object.getOwnPropertySymbols) {\n        return names.concat(Object.getOwnPropertySymbols(events));\n      }\n\n      return names;\n    };\n\n    /**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\n    EventEmitter.prototype.listeners = function listeners(event) {\n      const evt = prefix ? prefix + event : event;\n      const handlers = this._events[evt];\n\n      if (!handlers) return [];\n      if (handlers.fn) return [handlers.fn];\n\n      for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n        ee[i] = handlers[i].fn;\n      }\n\n      return ee;\n    };\n\n    /**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\n    EventEmitter.prototype.listenerCount = function listenerCount(event) {\n      const evt = prefix ? prefix + event : event;\n      const listeners = this._events[evt];\n\n      if (!listeners) return 0;\n      if (listeners.fn) return 1;\n      return listeners.length;\n    };\n\n    /**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\n    EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n      const evt = prefix ? prefix + event : event;\n\n      if (!this._events[evt]) return false;\n\n      const listeners = this._events[evt];\n      const len = arguments.length;\n      let args;\n      let i;\n\n      if (listeners.fn) {\n        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n        switch (len) {\n        case 1: return listeners.fn.call(listeners.context), true;\n        case 2: return listeners.fn.call(listeners.context, a1), true;\n        case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n        case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n        case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n        case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n        }\n\n        for (i = 1, args = new Array(len - 1); i < len; i++) {\n          args[i - 1] = arguments[i];\n        }\n\n        listeners.fn.apply(listeners.context, args);\n      } else {\n        const { length } = listeners;\n        let j;\n\n        for (i = 0; i < length; i++) {\n          if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n          switch (len) {\n          case 1: listeners[i].fn.call(listeners[i].context); break;\n          case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n          case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n          case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n          default:\n            if (!args) {\n              for (j = 1, args = new Array(len - 1); j < len; j++) {\n                args[j - 1] = arguments[j];\n              }\n            }\n\n            listeners[i].fn.apply(listeners[i].context, args);\n          }\n        }\n      }\n\n      return true;\n    };\n\n    /**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\n    EventEmitter.prototype.on = function on(event, fn, context) {\n      return addListener(this, event, fn, context, false);\n    };\n\n    /**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\n    EventEmitter.prototype.once = function once(event, fn, context) {\n      return addListener(this, event, fn, context, true);\n    };\n\n    /**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\n    EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n      const evt = prefix ? prefix + event : event;\n\n      if (!this._events[evt]) return this;\n      if (!fn) {\n        clearEvent(this, evt);\n        return this;\n      }\n\n      const listeners = this._events[evt];\n\n      if (listeners.fn) {\n        if (\n          listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n        ) {\n          clearEvent(this, evt);\n        }\n      } else {\n        for (var i = 0, events = [], { length } = listeners; i < length; i++) {\n          if (\n            listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n          ) {\n            events.push(listeners[i]);\n          }\n        }\n\n        //\n        // Reset the array, or remove it completely if we have no more listeners.\n        //\n        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n        else clearEvent(this, evt);\n      }\n\n      return this;\n    };\n\n    /**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\n    EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n      let evt;\n\n      if (event) {\n        evt = prefix ? prefix + event : event;\n        if (this._events[evt]) clearEvent(this, evt);\n      } else {\n        this._events = new Events();\n        this._eventsCount = 0;\n      }\n\n      return this;\n    };\n\n    //\n    // Alias methods names because people roll like that.\n    //\n    EventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n    EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n    //\n    // Expose the prefix.\n    //\n    EventEmitter.prefixed = prefix;\n\n    //\n    // Allow `EventEmitter` to be imported as module namespace.\n    //\n    EventEmitter.EventEmitter = EventEmitter;\n\n    //\n    // Expose the module.\n    //\n    if (typeof module !== 'undefined') {\n      module.exports = EventEmitter;\n    }\n  }, {}],\n  4: [function (_dereq_, module, exports) {\n    if (typeof Object.create === 'function') {\n      // implementation from standard node.js 'util' module\n      module.exports = function inherits(ctor, superCtor) {\n        if (superCtor) {\n          ctor.super_ = superCtor;\n          ctor.prototype = Object.create(superCtor.prototype, {\n            constructor: {\n              value: ctor,\n              enumerable: false,\n              writable: true,\n              configurable: true,\n            },\n          });\n        }\n      };\n    } else {\n      // old school shim for old browsers\n      module.exports = function inherits(ctor, superCtor) {\n        if (superCtor) {\n          ctor.super_ = superCtor;\n          const TempCtor = function () {};\n          TempCtor.prototype = superCtor.prototype;\n          ctor.prototype = new TempCtor();\n          ctor.prototype.constructor = ctor;\n        }\n      };\n    }\n  }, {}],\n  5: [function (_dereq_, module, exports) {\n    const regex = new RegExp(`^((?:\\\\d+)?\\\\.?\\\\d+) *(${[\n      'milliseconds?',\n      'msecs?',\n      'ms',\n      'seconds?',\n      'secs?',\n      's',\n      'minutes?',\n      'mins?',\n      'm',\n      'hours?',\n      'hrs?',\n      'h',\n      'days?',\n      'd',\n      'weeks?',\n      'wks?',\n      'w',\n      'years?',\n      'yrs?',\n      'y',\n    ].join('|')})?$`, 'i');\n\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n    const week = day * 7;\n    const year = day * 365;\n\n    /**\n * Parse a time string and return the number value of it.\n *\n * @param {String} ms Time string.\n * @returns {Number}\n * @api private\n */\n    module.exports = function millisecond(ms) {\n      const type = typeof ms;\n      let amount;\n      let match;\n\n      if (type === 'number') return ms;\n      if (type !== 'string' || ms === '0' || !ms) return 0;\n      if (+ms) return +ms;\n\n      //\n      // We are vulnerable to the regular expression denial of service (ReDoS).\n      // In order to mitigate this we don't parse the input string if it is too long.\n      // See https://nodesecurity.io/advisories/46.\n      //\n      if (ms.length > 10000 || !(match = regex.exec(ms))) return 0;\n\n      amount = parseFloat(match[1]);\n\n      switch (match[2].toLowerCase()) {\n      case 'years':\n      case 'year':\n      case 'yrs':\n      case 'yr':\n      case 'y':\n        return amount * year;\n\n      case 'weeks':\n      case 'week':\n      case 'wks':\n      case 'wk':\n      case 'w':\n        return amount * week;\n\n      case 'days':\n      case 'day':\n      case 'd':\n        return amount * day;\n\n      case 'hours':\n      case 'hour':\n      case 'hrs':\n      case 'hr':\n      case 'h':\n        return amount * hour;\n\n      case 'minutes':\n      case 'minute':\n      case 'mins':\n      case 'min':\n      case 'm':\n        return amount * minute;\n\n      case 'seconds':\n      case 'second':\n      case 'secs':\n      case 'sec':\n      case 's':\n        return amount * second;\n\n      default:\n        return amount;\n      }\n    };\n  }, {}],\n  6: [function (_dereq_, module, exports) {\n    /**\n * Wrap callbacks to prevent double execution.\n *\n * @param {Function} fn Function that should only be called once.\n * @returns {Function} A wrapped callback which prevents execution.\n * @api public\n */\n    module.exports = function one(fn) {\n      let called = 0;\n      let value;\n\n      /**\n   * The function that prevents double execution.\n   *\n   * @api private\n   */\n      function onetime() {\n        if (called) return value;\n\n        called = 1;\n        value = fn.apply(this, arguments);\n        fn = null;\n\n        return value;\n      }\n\n      //\n      // To make debugging more easy we want to use the name of the supplied\n      // function. So when you look at the functions that are assigned to event\n      // listeners you don't see a load of `onetime` functions but actually the\n      // names of the functions that this module will call.\n      //\n      onetime.displayName = fn.displayName || fn.name || onetime.displayName || onetime.name;\n      return onetime;\n    };\n  }, {}],\n  7: [function (_dereq_, module, exports) {\n    // shim for using process in browser\n    const process = module.exports = {};\n\n    // cached from whatever global is present so that test runners that stub it\n    // don't break things.  But we need to wrap it in a try catch in case it is\n    // wrapped in strict mode code which doesn't define any globals.  It's inside a\n    // function because try/catches deoptimize in certain engines.\n\n    let cachedSetTimeout;\n    let cachedClearTimeout;\n\n    function defaultSetTimout() {\n      throw new Error('setTimeout has not been defined');\n    }\n    function defaultClearTimeout() {\n      throw new Error('clearTimeout has not been defined');\n    }\n    (function () {\n      try {\n        if (typeof setTimeout === 'function') {\n          cachedSetTimeout = setTimeout;\n        } else {\n          cachedSetTimeout = defaultSetTimout;\n        }\n      } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n      }\n      try {\n        if (typeof clearTimeout === 'function') {\n          cachedClearTimeout = clearTimeout;\n        } else {\n          cachedClearTimeout = defaultClearTimeout;\n        }\n      } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n      }\n    }());\n    function runTimeout(fun) {\n      if (cachedSetTimeout === setTimeout) {\n        // normal enviroments in sane situations\n        return setTimeout(fun, 0);\n      }\n      // if setTimeout wasn't available but was latter defined\n      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n      }\n      try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n      } catch (e) {\n        try {\n          // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n          return cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n          // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n          return cachedSetTimeout.call(this, fun, 0);\n        }\n      }\n    }\n    function runClearTimeout(marker) {\n      if (cachedClearTimeout === clearTimeout) {\n        // normal enviroments in sane situations\n        return clearTimeout(marker);\n      }\n      // if clearTimeout wasn't available but was latter defined\n      if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n      }\n      try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n      } catch (e) {\n        try {\n          // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n          return cachedClearTimeout.call(null, marker);\n        } catch (e) {\n          // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n          // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n          return cachedClearTimeout.call(this, marker);\n        }\n      }\n    }\n    let queue = [];\n    let draining = false;\n    let currentQueue;\n    let queueIndex = -1;\n\n    function cleanUpNextTick() {\n      if (!draining || !currentQueue) {\n        return;\n      }\n      draining = false;\n      if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n      } else {\n        queueIndex = -1;\n      }\n      if (queue.length) {\n        drainQueue();\n      }\n    }\n\n    function drainQueue() {\n      if (draining) {\n        return;\n      }\n      const timeout = runTimeout(cleanUpNextTick);\n      draining = true;\n\n      let len = queue.length;\n      while (len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n          if (currentQueue) {\n            currentQueue[queueIndex].run();\n          }\n        }\n        queueIndex = -1;\n        len = queue.length;\n      }\n      currentQueue = null;\n      draining = false;\n      runClearTimeout(timeout);\n    }\n\n    process.nextTick = function (fun) {\n      const args = new Array(arguments.length - 1);\n      if (arguments.length > 1) {\n        for (let i = 1; i < arguments.length; i++) {\n          args[i - 1] = arguments[i];\n        }\n      }\n      queue.push(new Item(fun, args));\n      if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n      }\n    };\n\n    // v8 likes predictible objects\n    function Item(fun, array) {\n      this.fun = fun;\n      this.array = array;\n    }\n    Item.prototype.run = function () {\n      this.fun.apply(null, this.array);\n    };\n    process.title = 'browser';\n    process.browser = true;\n    process.env = {};\n    process.argv = [];\n    process.version = ''; // empty string to avoid regexp issues\n    process.versions = {};\n\n    function noop() {}\n\n    process.on = noop;\n    process.addListener = noop;\n    process.once = noop;\n    process.off = noop;\n    process.removeListener = noop;\n    process.removeAllListeners = noop;\n    process.emit = noop;\n    process.prependListener = noop;\n    process.prependOnceListener = noop;\n\n    process.listeners = function (name) { return []; };\n\n    process.binding = function (name) {\n      throw new Error('process.binding is not supported');\n    };\n\n    process.cwd = function () { return '/'; };\n    process.chdir = function (dir) {\n      throw new Error('process.chdir is not supported');\n    };\n    process.umask = function () { return 0; };\n  }, {}],\n  8: [function (_dereq_, module, exports) {\n    const has = Object.prototype.hasOwnProperty;\n    let undef;\n\n    /**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\n    function decode(input) {\n      try {\n        return decodeURIComponent(input.replace(/\\+/g, ' '));\n      } catch (e) {\n        return null;\n      }\n    }\n\n    /**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\n    function encode(input) {\n      try {\n        return encodeURIComponent(input);\n      } catch (e) {\n        return null;\n      }\n    }\n\n    /**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\n    function querystring(query) {\n      const parser = /([^=?&]+)=?([^&]*)/g;\n      const result = {};\n      let part;\n\n      while (part = parser.exec(query)) {\n        const key = decode(part[1]);\n        const value = decode(part[2]);\n\n        //\n        // Prevent overriding of existing properties. This ensures that build-in\n        // methods like `toString` or __proto__ are not overriden by malicious\n        // querystrings.\n        //\n        // In the case if failed decoding, we want to omit the key/value pairs\n        // from the result.\n        //\n        if (key === null || value === null || key in result) continue;\n        result[key] = value;\n      }\n\n      return result;\n    }\n\n    /**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\n    function querystringify(obj, prefix) {\n      prefix = prefix || '';\n\n      const pairs = [];\n      let value;\n      let key;\n\n      //\n      // Optionally prefix with a '?' if needed\n      //\n      if (typeof prefix !== 'string') prefix = '?';\n\n      for (key in obj) {\n        if (has.call(obj, key)) {\n          value = obj[key];\n\n          //\n          // Edge cases where we actually want to encode the value to an empty\n          // string instead of the stringified value.\n          //\n          if (!value && (value === null || value === undef || isNaN(value))) {\n            value = '';\n          }\n\n          key = encodeURIComponent(key);\n          value = encodeURIComponent(value);\n\n          //\n          // If we failed to encode the strings, we should bail out as we don't\n          // want to add invalid strings to the query.\n          //\n          if (key === null || value === null) continue;\n          pairs.push(`${key}=${value}`);\n        }\n      }\n\n      return pairs.length ? prefix + pairs.join('&') : '';\n    }\n\n    //\n    // Expose the module.\n    //\n    exports.stringify = querystringify;\n    exports.parse = querystring;\n  }, {}],\n  9: [function (_dereq_, module, exports) {\n    const EventEmitter = _dereq_('eventemitter3');\n    const millisecond = _dereq_('millisecond');\n    const destroy = _dereq_('demolish');\n    const Tick = _dereq_('tick-tock');\n    const one = _dereq_('one-time');\n\n    /**\n * Returns sane defaults about a given value.\n *\n * @param {String} name Name of property we want.\n * @param {Recovery} selfie Recovery instance that got created.\n * @param {Object} opts User supplied options we want to check.\n * @returns {Number} Some default value.\n * @api private\n */\n    function defaults(name, selfie, opts) {\n      return millisecond(\n        name in opts ? opts[name] : (name in selfie ? selfie[name] : Recovery[name]),\n      );\n    }\n\n    /**\n * Attempt to recover your connection with reconnection attempt.\n *\n * @constructor\n * @param {Object} options Configuration\n * @api public\n */\n    function Recovery(options) {\n      const recovery = this;\n\n      if (!(recovery instanceof Recovery)) return new Recovery(options);\n\n      options = options || {};\n\n      recovery.attempt = null; // Stores the current reconnect attempt.\n      recovery._fn = null; // Stores the callback.\n\n      recovery['reconnect timeout'] = defaults('reconnect timeout', recovery, options);\n      recovery.retries = defaults('retries', recovery, options);\n      recovery.factor = defaults('factor', recovery, options);\n      recovery.max = defaults('max', recovery, options);\n      recovery.min = defaults('min', recovery, options);\n      recovery.timers = new Tick(recovery);\n    }\n\n    Recovery.prototype = new EventEmitter();\n    Recovery.prototype.constructor = Recovery;\n\n    Recovery['reconnect timeout'] = '30 seconds'; // Maximum time to wait for an answer.\n    Recovery.max = Infinity; // Maximum delay.\n    Recovery.min = '500 ms'; // Minimum delay.\n    Recovery.retries = 10; // Maximum amount of retries.\n    Recovery.factor = 2; // Exponential back off factor.\n\n    /**\n * Start a new reconnect procedure.\n *\n * @returns {Recovery}\n * @api public\n */\n    Recovery.prototype.reconnect = function reconnect() {\n      const recovery = this;\n\n      return recovery.backoff(function backedoff(err, opts) {\n        opts.duration = (+new Date()) - opts.start;\n\n        if (err) return recovery.emit('reconnect failed', err, opts);\n\n        recovery.emit('reconnected', opts);\n      }, recovery.attempt);\n    };\n\n    /**\n * Exponential back off algorithm for retry operations. It uses a randomized\n * retry so we don't DDOS our server when it goes down under pressure.\n *\n * @param {Function} fn Callback to be called after the timeout.\n * @param {Object} opts Options for configuring the timeout.\n * @returns {Recovery}\n * @api private\n */\n    Recovery.prototype.backoff = function backoff(fn, opts) {\n      const recovery = this;\n\n      opts = opts || recovery.attempt || {};\n\n      //\n      // Bailout when we already have a back off process running. We shouldn't call\n      // the callback then.\n      //\n      if (opts.backoff) return recovery;\n\n      opts['reconnect timeout'] = defaults('reconnect timeout', recovery, opts);\n      opts.retries = defaults('retries', recovery, opts);\n      opts.factor = defaults('factor', recovery, opts);\n      opts.max = defaults('max', recovery, opts);\n      opts.min = defaults('min', recovery, opts);\n\n      opts.start = +opts.start || +new Date();\n      opts.duration = +opts.duration || 0;\n      opts.attempt = +opts.attempt || 0;\n\n      //\n      // Bailout if we are about to make too much attempts.\n      //\n      if (opts.attempt === opts.retries) {\n        fn.call(recovery, new Error('Unable to recover'), opts);\n        return recovery;\n      }\n\n      //\n      // Prevent duplicate back off attempts using the same options object and\n      // increment our attempt as we're about to have another go at this thing.\n      //\n      opts.backoff = true;\n      opts.attempt++;\n\n      recovery.attempt = opts;\n\n      //\n      // Calculate the timeout, but make it randomly so we don't retry connections\n      // at the same interval and defeat the purpose. This exponential back off is\n      // based on the work of:\n      //\n      // http://dthain.blogspot.nl/2009/02/exponential-backoff-in-distributed.html\n      //\n      opts.scheduled = opts.attempt !== 1\n        ? Math.min(Math.round(\n          (Math.random() + 1) * opts.min * Math.pow(opts.factor, opts.attempt - 1),\n        ), opts.max)\n        : opts.min;\n\n      recovery.timers.setTimeout('reconnect', function delay() {\n        opts.duration = (+new Date()) - opts.start;\n        opts.backoff = false;\n        recovery.timers.clear('reconnect, timeout');\n\n        //\n        // Create a `one` function which can only be called once. So we can use the\n        // same function for different types of invocations to create a much better\n        // and usable API.\n        //\n        const connect = recovery._fn = one(function connect(err) {\n          recovery.reset();\n\n          if (err) return recovery.backoff(fn, opts);\n\n          fn.call(recovery, undefined, opts);\n        });\n\n        recovery.emit('reconnect', opts, connect);\n        recovery.timers.setTimeout('timeout', function timeout() {\n          const err = new Error('Failed to reconnect in a timely manner');\n          opts.duration = (+new Date()) - opts.start;\n\n          recovery.emit('reconnect timeout', err, opts);\n          connect(err);\n        }, opts['reconnect timeout']);\n      }, opts.scheduled);\n\n      //\n      // Emit a `reconnecting` event with current reconnect options. This allows\n      // them to update the UI and provide their users with feedback.\n      //\n      recovery.emit('reconnect scheduled', opts);\n\n      return recovery;\n    };\n\n    /**\n * Check if the reconnection process is currently reconnecting.\n *\n * @returns {Boolean}\n * @api public\n */\n    Recovery.prototype.reconnecting = function reconnecting() {\n      return !!this.attempt;\n    };\n\n    /**\n * Tell our reconnection procedure that we're passed.\n *\n * @param {Error} err Reconnection failed.\n * @returns {Recovery}\n * @api public\n */\n    Recovery.prototype.reconnected = function reconnected(err) {\n      if (this._fn) this._fn(err);\n      return this;\n    };\n\n    /**\n * Reset the reconnection attempt so it can be re-used again.\n *\n * @returns {Recovery}\n * @api public\n */\n    Recovery.prototype.reset = function reset() {\n      this._fn = this.attempt = null;\n      this.timers.clear('reconnect, timeout');\n\n      return this;\n    };\n\n    /**\n * Clean up the instance.\n *\n * @type {Function}\n * @returns {Boolean}\n * @api public\n */\n    Recovery.prototype.destroy = destroy('timers attempt _fn');\n\n    //\n    // Expose the module.\n    //\n    module.exports = Recovery;\n  }, { demolish: 1, eventemitter3: 10, millisecond: 5, 'one-time': 6, 'tick-tock': 12 }],\n  10: [function (_dereq_, module, exports) {\n    //\n    // We store our EE objects in a plain object whose properties are event names.\n    // If `Object.create(null)` is not supported we prefix the event names with a\n    // `~` to make sure that the built-in object properties are not overridden or\n    // used as an attack vector.\n    // We also assume that `Object.create(null)` is available when the event name\n    // is an ES6 Symbol.\n    //\n    const prefix = typeof Object.create !== 'function' ? '~' : false;\n\n    /**\n * Representation of a single EventEmitter function.\n *\n * @param {Function} fn Event handler to be called.\n * @param {Mixed} context Context for function execution.\n * @param {Boolean} once Only emit once\n * @api private\n */\n    function EE(fn, context, once) {\n      this.fn = fn;\n      this.context = context;\n      this.once = once || false;\n    }\n\n    /**\n * Minimal EventEmitter interface that is molded against the Node.js\n * EventEmitter interface.\n *\n * @constructor\n * @api public\n */\n    function EventEmitter() { /* Nothing to set */ }\n\n    /**\n * Holds the assigned EventEmitters by name.\n *\n * @type {Object}\n * @private\n */\n    EventEmitter.prototype._events = undefined;\n\n    /**\n * Return a list of assigned event listeners.\n *\n * @param {String} event The events that should be listed.\n * @param {Boolean} exists We only need to know if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\n    EventEmitter.prototype.listeners = function listeners(event, exists) {\n      const evt = prefix ? prefix + event : event;\n      const available = this._events && this._events[evt];\n\n      if (exists) return !!available;\n      if (!available) return [];\n      if (available.fn) return [available.fn];\n\n      for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n        ee[i] = available[i].fn;\n      }\n\n      return ee;\n    };\n\n    /**\n * Emit an event to all registered event listeners.\n *\n * @param {String} event The name of the event.\n * @returns {Boolean} Indication if we've emitted an event.\n * @api public\n */\n    EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n      const evt = prefix ? prefix + event : event;\n\n      if (!this._events || !this._events[evt]) return false;\n\n      const listeners = this._events[evt];\n      const len = arguments.length;\n      let args;\n      let i;\n\n      if (typeof listeners.fn === 'function') {\n        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n        switch (len) {\n        case 1: return listeners.fn.call(listeners.context), true;\n        case 2: return listeners.fn.call(listeners.context, a1), true;\n        case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n        case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n        case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n        case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n        }\n\n        for (i = 1, args = new Array(len - 1); i < len; i++) {\n          args[i - 1] = arguments[i];\n        }\n\n        listeners.fn.apply(listeners.context, args);\n      } else {\n        const { length } = listeners;\n        let j;\n\n        for (i = 0; i < length; i++) {\n          if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n          switch (len) {\n          case 1: listeners[i].fn.call(listeners[i].context); break;\n          case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n          case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n          default:\n            if (!args) {\n              for (j = 1, args = new Array(len - 1); j < len; j++) {\n                args[j - 1] = arguments[j];\n              }\n            }\n\n            listeners[i].fn.apply(listeners[i].context, args);\n          }\n        }\n      }\n\n      return true;\n    };\n\n    /**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\n    EventEmitter.prototype.on = function on(event, fn, context) {\n      const listener = new EE(fn, context || this);\n      const evt = prefix ? prefix + event : event;\n\n      if (!this._events) this._events = prefix ? {} : Object.create(null);\n      if (!this._events[evt]) this._events[evt] = listener;\n      else if (!this._events[evt].fn) this._events[evt].push(listener);\n      else {\n        this._events[evt] = [\n          this._events[evt], listener,\n        ];\n      }\n\n      return this;\n    };\n\n    /**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\n    EventEmitter.prototype.once = function once(event, fn, context) {\n      const listener = new EE(fn, context || this, true);\n      const evt = prefix ? prefix + event : event;\n\n      if (!this._events) this._events = prefix ? {} : Object.create(null);\n      if (!this._events[evt]) this._events[evt] = listener;\n      else if (!this._events[evt].fn) this._events[evt].push(listener);\n      else {\n        this._events[evt] = [\n          this._events[evt], listener,\n        ];\n      }\n\n      return this;\n    };\n\n    /**\n * Remove event listeners.\n *\n * @param {String} event The event we want to remove.\n * @param {Function} fn The listener that we need to find.\n * @param {Mixed} context Only remove listeners matching this context.\n * @param {Boolean} once Only remove once listeners.\n * @api public\n */\n    EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n      const evt = prefix ? prefix + event : event;\n\n      if (!this._events || !this._events[evt]) return this;\n\n      const listeners = this._events[evt];\n      const events = [];\n\n      if (fn) {\n        if (listeners.fn) {\n          if (\n            listeners.fn !== fn\n        || (once && !listeners.once)\n        || (context && listeners.context !== context)\n          ) {\n            events.push(listeners);\n          }\n        } else {\n          for (let i = 0, { length } = listeners; i < length; i++) {\n            if (\n              listeners[i].fn !== fn\n          || (once && !listeners[i].once)\n          || (context && listeners[i].context !== context)\n            ) {\n              events.push(listeners[i]);\n            }\n          }\n        }\n      }\n\n      //\n      // Reset the array, or remove it completely if we have no more listeners.\n      //\n      if (events.length) {\n        this._events[evt] = events.length === 1 ? events[0] : events;\n      } else {\n        delete this._events[evt];\n      }\n\n      return this;\n    };\n\n    /**\n * Remove all listeners or only the listeners for the specified event.\n *\n * @param {String} event The event want to remove all listeners for.\n * @api public\n */\n    EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n      if (!this._events) return this;\n\n      if (event) delete this._events[prefix ? prefix + event : event];\n      else this._events = prefix ? {} : Object.create(null);\n\n      return this;\n    };\n\n    //\n    // Alias methods names because people roll like that.\n    //\n    EventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n    EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n    //\n    // This function doesn't apply anymore.\n    //\n    EventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n      return this;\n    };\n\n    //\n    // Expose the prefix.\n    //\n    EventEmitter.prefixed = prefix;\n\n    //\n    // Expose the module.\n    //\n    if (typeof module !== 'undefined') {\n      module.exports = EventEmitter;\n    }\n  }, {}],\n  11: [function (_dereq_, module, exports) {\n    /**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\n    module.exports = function required(port, protocol) {\n      protocol = protocol.split(':')[0];\n      port = +port;\n\n      if (!port) return false;\n\n      switch (protocol) {\n      case 'http':\n      case 'ws':\n        return port !== 80;\n\n      case 'https':\n      case 'wss':\n        return port !== 443;\n\n      case 'ftp':\n        return port !== 21;\n\n      case 'gopher':\n        return port !== 70;\n\n      case 'file':\n        return false;\n      }\n\n      return port !== 0;\n    };\n  }, {}],\n  12: [function (_dereq_, module, exports) {\n    (function (setImmediate, clearImmediate) {\n      const has = Object.prototype.hasOwnProperty;\n      const ms = _dereq_('millisecond');\n\n      /**\n * Timer instance.\n *\n * @constructor\n * @param {Object} timer New timer instance.\n * @param {Function} clear Clears the timer instance.\n * @param {Function} duration Duration of the timer.\n * @param {Function} fn The functions that need to be executed.\n * @api private\n */\n      function Timer(timer, clear, duration, fn) {\n        this.start = +(new Date());\n        this.duration = duration;\n        this.clear = clear;\n        this.timer = timer;\n        this.fns = [fn];\n      }\n\n      /**\n * Calculate the time left for a given timer.\n *\n * @returns {Number} Time in milliseconds.\n * @api public\n */\n      Timer.prototype.remaining = function remaining() {\n        return this.duration - this.taken();\n      };\n\n      /**\n * Calculate the amount of time it has taken since we've set the timer.\n *\n * @returns {Number}\n * @api public\n */\n      Timer.prototype.taken = function taken() {\n        return +(new Date()) - this.start;\n      };\n\n      /**\n * Custom wrappers for the various of clear{whatever} functions. We cannot\n * invoke them directly as this will cause thrown errors in Google Chrome with\n * an Illegal Invocation Error\n *\n * @see #2\n * @type {Function}\n * @api private\n */\n      function unsetTimeout(id) { clearTimeout(id); }\n      function unsetInterval(id) { clearInterval(id); }\n      function unsetImmediate(id) { clearImmediate(id); }\n\n      /**\n * Simple timer management.\n *\n * @constructor\n * @param {Mixed} context Context of the callbacks that we execute.\n * @api public\n */\n      function Tick(context) {\n        if (!(this instanceof Tick)) return new Tick(context);\n\n        this.timers = {};\n        this.context = context || this;\n      }\n\n      /**\n * Return a function which will just iterate over all assigned callbacks and\n * optionally clear the timers from memory if needed.\n *\n * @param {String} name Name of the timer we need to execute.\n * @param {Boolean} clear Also clear from memory.\n * @returns {Function}\n * @api private\n */\n      Tick.prototype.tock = function ticktock(name, clear) {\n        const tock = this;\n\n        return function tickedtock() {\n          if (!(name in tock.timers)) return;\n\n          const timer = tock.timers[name];\n          const fns = timer.fns.slice();\n          const l = fns.length;\n          let i = 0;\n\n          if (clear) tock.clear(name);\n          else tock.start = +new Date();\n\n          for (; i < l; i++) {\n            fns[i].call(tock.context);\n          }\n        };\n      };\n\n      /**\n * Add a new timeout.\n *\n * @param {String} name Name of the timer.\n * @param {Function} fn Completion callback.\n * @param {Mixed} time Duration of the timer.\n * @returns {Tick}\n * @api public\n */\n      Tick.prototype.setTimeout = function timeout(name, fn, time) {\n        const tick = this;\n        let tock;\n\n        if (tick.timers[name]) {\n          tick.timers[name].fns.push(fn);\n          return tick;\n        }\n\n        tock = ms(time);\n        tick.timers[name] = new Timer(\n          setTimeout(tick.tock(name, true), ms(time)),\n          unsetTimeout,\n          tock,\n          fn,\n        );\n\n        return tick;\n      };\n\n      /**\n * Add a new interval.\n *\n * @param {String} name Name of the timer.\n * @param {Function} fn Completion callback.\n * @param {Mixed} time Interval of the timer.\n * @returns {Tick}\n * @api public\n */\n      Tick.prototype.setInterval = function interval(name, fn, time) {\n        const tick = this;\n        let tock;\n\n        if (tick.timers[name]) {\n          tick.timers[name].fns.push(fn);\n          return tick;\n        }\n\n        tock = ms(time);\n        tick.timers[name] = new Timer(\n          setInterval(tick.tock(name), ms(time)),\n          unsetInterval,\n          tock,\n          fn,\n        );\n\n        return tick;\n      };\n\n      /**\n * Add a new setImmediate.\n *\n * @param {String} name Name of the timer.\n * @param {Function} fn Completion callback.\n * @returns {Tick}\n * @api public\n */\n      Tick.prototype.setImmediate = function immediate(name, fn) {\n        const tick = this;\n\n        if (typeof setImmediate !== 'function') return tick.setTimeout(name, fn, 0);\n\n        if (tick.timers[name]) {\n          tick.timers[name].fns.push(fn);\n          return tick;\n        }\n\n        tick.timers[name] = new Timer(\n          setImmediate(tick.tock(name, true)),\n          unsetImmediate,\n          0,\n          fn,\n        );\n\n        return tick;\n      };\n\n      /**\n * Check if we have a timer set.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api public\n */\n      Tick.prototype.active = function active(name) {\n        return name in this.timers;\n      };\n\n      /**\n * Properly clean up all timeout references. If no arguments are supplied we\n * will attempt to clear every single timer that is present.\n *\n * @param {Arguments} ..args.. The names of the timeouts we need to clear\n * @returns {Tick}\n * @api public\n */\n      Tick.prototype.clear = function clear() {\n        let args = arguments.length ? arguments : [];\n        const tick = this;\n        let timer;\n        let i;\n        let l;\n\n        if (args.length === 1 && typeof args[0] === 'string') {\n          args = args[0].split(/[, ]+/);\n        }\n\n        if (!args.length) {\n          for (timer in tick.timers) {\n            if (has.call(tick.timers, timer)) args.push(timer);\n          }\n        }\n\n        for (i = 0, l = args.length; i < l; i++) {\n          timer = tick.timers[args[i]];\n\n          if (!timer) continue;\n          timer.clear(timer.timer);\n\n          timer.fns = timer.timer = timer.clear = null;\n          delete tick.timers[args[i]];\n        }\n\n        return tick;\n      };\n\n      /**\n * Adjust a timeout or interval to a new duration.\n *\n * @returns {Tick}\n * @api public\n */\n      Tick.prototype.adjust = function adjust(name, time) {\n        let interval;\n        const tick = this;\n        const tock = ms(time);\n        const timer = tick.timers[name];\n\n        if (!timer) return tick;\n\n        interval = timer.clear === unsetInterval;\n        timer.clear(timer.timer);\n        timer.start = +(new Date());\n        timer.duration = tock;\n        timer.timer = (interval ? setInterval : setTimeout)(tick.tock(name, !interval), tock);\n\n        return tick;\n      };\n\n      /**\n * We will no longer use this module, prepare your self for global cleanups.\n *\n * @returns {Boolean}\n * @api public\n */\n      Tick.prototype.end = Tick.prototype.destroy = function end() {\n        if (!this.context) return false;\n\n        this.clear();\n        this.context = this.timers = null;\n\n        return true;\n      };\n\n      //\n      // Expose the timer factory.\n      //\n      Tick.Timer = Timer;\n      module.exports = Tick;\n    }).call(this, _dereq_('timers').setImmediate, _dereq_('timers').clearImmediate);\n  }, { millisecond: 5, timers: 13 }],\n  13: [function (_dereq_, module, exports) {\n    (function (setImmediate, clearImmediate) {\n      const { nextTick } = _dereq_('process/browser.js');\n      const { apply } = Function.prototype;\n      const { slice } = Array.prototype;\n      const immediateIds = {};\n      let nextImmediateId = 0;\n\n      // DOM APIs, for completeness\n\n      exports.setTimeout = function () {\n        return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n      };\n      exports.setInterval = function () {\n        return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n      };\n      exports.clearTimeout =\nexports.clearInterval = function (timeout) { timeout.close(); };\n\n      function Timeout(id, clearFn) {\n        this._id = id;\n        this._clearFn = clearFn;\n      }\n      Timeout.prototype.unref = Timeout.prototype.ref = function () {};\n      Timeout.prototype.close = function () {\n        this._clearFn.call(window, this._id);\n      };\n\n      // Does not start the time, just sets up the members needed.\n      exports.enroll = function (item, msecs) {\n        clearTimeout(item._idleTimeoutId);\n        item._idleTimeout = msecs;\n      };\n\n      exports.unenroll = function (item) {\n        clearTimeout(item._idleTimeoutId);\n        item._idleTimeout = -1;\n      };\n\n      exports._unrefActive = exports.active = function (item) {\n        clearTimeout(item._idleTimeoutId);\n\n        const msecs = item._idleTimeout;\n        if (msecs >= 0) {\n          item._idleTimeoutId = setTimeout(function onTimeout() {\n            if (item._onTimeout) item._onTimeout();\n          }, msecs);\n        }\n      };\n\n      // That's not how node.js implements it but the exposed api is the same.\n      exports.setImmediate = typeof setImmediate === 'function' ? setImmediate : function (fn) {\n        const id = nextImmediateId++;\n        const args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n        immediateIds[id] = true;\n\n        nextTick(function onNextTick() {\n          if (immediateIds[id]) {\n            // fn.call() is faster so we optimize for the common use-case\n            // @see http://jsperf.com/call-apply-segu\n            if (args) {\n              fn.apply(null, args);\n            } else {\n              fn.call(null);\n            }\n            // Prevent ids from leaking\n            exports.clearImmediate(id);\n          }\n        });\n\n        return id;\n      };\n\n      exports.clearImmediate = typeof clearImmediate === 'function' ? clearImmediate : function (id) {\n        delete immediateIds[id];\n      };\n    }).call(this, _dereq_('timers').setImmediate, _dereq_('timers').clearImmediate);\n  }, { 'process/browser.js': 7, timers: 13 }],\n  14: [function (_dereq_, module, exports) {\n    (function (global) {\n      const required = _dereq_('requires-port');\n      const qs = _dereq_('querystringify');\n      const slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n      const protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i;\n      const whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]';\n      const left = new RegExp(`^${whitespace}+`);\n\n      /**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\n      function trimLeft(str) {\n        return (str || '').toString().replace(left, '');\n      }\n\n      /**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\n      const rules = [\n        ['#', 'hash'], // Extract from the back.\n        ['?', 'query'], // Extract from the back.\n        function sanitize(address) { // Sanitize what is left of the address\n          return address.replace('\\\\', '/');\n        },\n        ['/', 'pathname'], // Extract from the back.\n        ['@', 'auth', 1], // Extract from the front.\n        [NaN, 'host', undefined, 1, 1], // Set left over value.\n        [/:(\\d+)$/, 'port', undefined, 1], // RegExp the back.\n        [NaN, 'hostname', undefined, 1, 1], // Set left over.\n      ];\n\n      /**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\n      const ignore = { hash: 1, query: 1 };\n\n      /**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\n      function lolcation(loc) {\n        let globalVar;\n\n        if (typeof window !== 'undefined') globalVar = window;\n        else if (typeof global !== 'undefined') globalVar = global;\n        else if (typeof self !== 'undefined') globalVar = self;\n        else globalVar = {};\n\n        const location = globalVar.location || {};\n        loc = loc || location;\n\n        let finaldestination = {};\n        const type = typeof loc;\n        let key;\n\n        if (loc.protocol === 'blob:') {\n          finaldestination = new Url(unescape(loc.pathname), {});\n        } else if (type === 'string') {\n          finaldestination = new Url(loc, {});\n          for (key in ignore) delete finaldestination[key];\n        } else if (type === 'object') {\n          for (key in loc) {\n            if (key in ignore) continue;\n            finaldestination[key] = loc[key];\n          }\n\n          if (finaldestination.slashes === undefined) {\n            finaldestination.slashes = slashes.test(loc.href);\n          }\n        }\n\n        return finaldestination;\n      }\n\n      /**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n      /**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\n      function extractProtocol(address) {\n        address = trimLeft(address);\n        const match = protocolre.exec(address);\n\n        return {\n          protocol: match[1] ? match[1].toLowerCase() : '',\n          slashes: !!match[2],\n          rest: match[3],\n        };\n      }\n\n      /**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\n      function resolve(relative, base) {\n        if (relative === '') return base;\n\n        const path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'));\n        let i = path.length;\n        const last = path[i - 1];\n        let unshift = false;\n        let up = 0;\n\n        while (i--) {\n          if (path[i] === '.') {\n            path.splice(i, 1);\n          } else if (path[i] === '..') {\n            path.splice(i, 1);\n            up++;\n          } else if (up) {\n            if (i === 0) unshift = true;\n            path.splice(i, 1);\n            up--;\n          }\n        }\n\n        if (unshift) path.unshift('');\n        if (last === '.' || last === '..') path.push('');\n\n        return path.join('/');\n      }\n\n      /**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\n      function Url(address, location, parser) {\n        address = trimLeft(address);\n\n        if (!(this instanceof Url)) {\n          return new Url(address, location, parser);\n        }\n\n        let relative; let extracted; let parse; let instruction; let index; let key;\n        const instructions = rules.slice();\n        const type = typeof location;\n        const url = this;\n        let i = 0;\n\n        //\n        // The following if statements allows this module two have compatibility with\n        // 2 different API:\n        //\n        // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n        //    where the boolean indicates that the query string should also be parsed.\n        //\n        // 2. The `URL` interface of the browser which accepts a URL, object as\n        //    arguments. The supplied object will be used as default values / fall-back\n        //    for relative paths.\n        //\n        if (type !== 'object' && type !== 'string') {\n          parser = location;\n          location = null;\n        }\n\n        if (parser && typeof parser !== 'function') parser = qs.parse;\n\n        location = lolcation(location);\n\n        //\n        // Extract protocol information before running the instructions.\n        //\n        extracted = extractProtocol(address || '');\n        relative = !extracted.protocol && !extracted.slashes;\n        url.slashes = extracted.slashes || relative && location.slashes;\n        url.protocol = extracted.protocol || location.protocol || '';\n        address = extracted.rest;\n\n        //\n        // When the authority component is absent the URL starts with a path\n        // component.\n        //\n        if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];\n\n        for (; i < instructions.length; i++) {\n          instruction = instructions[i];\n\n          if (typeof instruction === 'function') {\n            address = instruction(address);\n            continue;\n          }\n\n          parse = instruction[0];\n          key = instruction[1];\n\n          if (parse !== parse) {\n            url[key] = address;\n          } else if (typeof parse === 'string') {\n            if (~(index = address.indexOf(parse))) {\n              if (typeof instruction[2] === 'number') {\n                url[key] = address.slice(0, index);\n                address = address.slice(index + instruction[2]);\n              } else {\n                url[key] = address.slice(index);\n                address = address.slice(0, index);\n              }\n            }\n          } else if ((index = parse.exec(address))) {\n            url[key] = index[1];\n            address = address.slice(0, index.index);\n          }\n\n          url[key] = url[key] || (\n            relative && instruction[3] ? location[key] || '' : ''\n          );\n\n          //\n          // Hostname, host and protocol should be lowercased so they can be used to\n          // create a proper `origin`.\n          //\n          if (instruction[4]) url[key] = url[key].toLowerCase();\n        }\n\n        //\n        // Also parse the supplied query string in to an object. If we're supplied\n        // with a custom parser as function use that instead of the default build-in\n        // parser.\n        //\n        if (parser) url.query = parser(url.query);\n\n        //\n        // If the URL is relative, resolve the pathname against the base URL.\n        //\n        if (\n          relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n        ) {\n          url.pathname = resolve(url.pathname, location.pathname);\n        }\n\n        //\n        // We should not add port numbers if they are already the default port number\n        // for a given protocol. As the host also contains the port number we're going\n        // override it with the hostname which contains no port number.\n        //\n        if (!required(url.port, url.protocol)) {\n          url.host = url.hostname;\n          url.port = '';\n        }\n\n        //\n        // Parse down the `auth` for the username and password.\n        //\n        url.username = url.password = '';\n        if (url.auth) {\n          instruction = url.auth.split(':');\n          url.username = instruction[0] || '';\n          url.password = instruction[1] || '';\n        }\n\n        url.origin = url.protocol && url.host && url.protocol !== 'file:'\n          ? `${url.protocol}//${url.host}`\n          : 'null';\n\n        //\n        // The href is just the compiled result.\n        //\n        url.href = url.toString();\n      }\n\n      /**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\n      function set(part, value, fn) {\n        const url = this;\n\n        switch (part) {\n        case 'query':\n          if (typeof value === 'string' && value.length) {\n            value = (fn || qs.parse)(value);\n          }\n\n          url[part] = value;\n          break;\n\n        case 'port':\n          url[part] = value;\n\n          if (!required(value, url.protocol)) {\n            url.host = url.hostname;\n            url[part] = '';\n          } else if (value) {\n            url.host = `${url.hostname}:${value}`;\n          }\n\n          break;\n\n        case 'hostname':\n          url[part] = value;\n\n          if (url.port) value += `:${url.port}`;\n          url.host = value;\n          break;\n\n        case 'host':\n          url[part] = value;\n\n          if (/:\\d+$/.test(value)) {\n            value = value.split(':');\n            url.port = value.pop();\n            url.hostname = value.join(':');\n          } else {\n            url.hostname = value;\n            url.port = '';\n          }\n\n          break;\n\n        case 'protocol':\n          url.protocol = value.toLowerCase();\n          url.slashes = !fn;\n          break;\n\n        case 'pathname':\n        case 'hash':\n          if (value) {\n            const char = part === 'pathname' ? '/' : '#';\n            url[part] = value.charAt(0) !== char ? char + value : value;\n          } else {\n            url[part] = value;\n          }\n          break;\n\n        default:\n          url[part] = value;\n        }\n\n        for (let i = 0; i < rules.length; i++) {\n          const ins = rules[i];\n\n          if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n        }\n\n        url.origin = url.protocol && url.host && url.protocol !== 'file:'\n          ? `${url.protocol}//${url.host}`\n          : 'null';\n\n        url.href = url.toString();\n\n        return url;\n      }\n\n      /**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\n      function toString(stringify) {\n        if (!stringify || typeof stringify !== 'function') stringify = qs.stringify;\n\n        let query;\n        const url = this;\n        let { protocol } = url;\n\n        if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n        let result = protocol + (url.slashes ? '//' : '');\n\n        if (url.username) {\n          result += url.username;\n          if (url.password) result += `:${url.password}`;\n          result += '@';\n        }\n\n        result += url.host + url.pathname;\n\n        query = typeof url.query === 'object' ? stringify(url.query) : url.query;\n        if (query) result += query.charAt(0) !== '?' ? `?${query}` : query;\n\n        if (url.hash) result += url.hash;\n\n        return result;\n      }\n\n      Url.prototype = { set, toString };\n\n      //\n      // Expose the URL parser and some additional properties that might be useful for\n      // others or testing.\n      //\n      Url.extractProtocol = extractProtocol;\n      Url.location = lolcation;\n      Url.trimLeft = trimLeft;\n      Url.qs = qs;\n\n      module.exports = Url;\n    }).call(this, typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {});\n  }, { querystringify: 8, 'requires-port': 11 }],\n  15: [function (_dereq_, module, exports) {\n    const alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('');\n    const length = 64;\n    const map = {};\n    let seed = 0;\n    let i = 0;\n    let prev;\n\n    /**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\n    function encode(num) {\n      let encoded = '';\n\n      do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n      } while (num > 0);\n\n      return encoded;\n    }\n\n    /**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\n    function decode(str) {\n      let decoded = 0;\n\n      for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n      }\n\n      return decoded;\n    }\n\n    /**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\n    function yeast() {\n      const now = encode(+new Date());\n\n      if (now !== prev) return seed = 0, prev = now;\n      return `${now}.${encode(seed++)}`;\n    }\n\n    //\n    // Map each character to its index.\n    //\n    for (; i < length; i++) map[alphabet[i]] = i;\n\n    //\n    // Expose the `yeast`, `encode` and `decode` functions.\n    //\n    yeast.encode = encode;\n    yeast.decode = decode;\n    module.exports = yeast;\n  }, {}],\n  16: [function (_dereq_, module, exports) {\n    /* globals require, define */\n\n\n    const EventEmitter = _dereq_('eventemitter3');\n    const TickTock = _dereq_('tick-tock');\n    const Recovery = _dereq_('recovery');\n    const qs = _dereq_('querystringify');\n    const inherits = _dereq_('inherits');\n    const destroy = _dereq_('demolish');\n    const yeast = _dereq_('yeast');\n    const u2028 = /\\u2028/g;\n    const u2029 = /\\u2029/g;\n\n    /**\n * Context assertion, ensure that some of our public Primus methods are called\n * with the correct context to ensure that\n *\n * @param {Primus} self The context of the function.\n * @param {String} method The method name.\n * @api private\n */\n    function context(self, method) {\n      if (self instanceof Primus) return;\n\n      const failure = new Error(`Primus#${method}'s context should called with a Primus instance`);\n\n      if (typeof self.listeners !== 'function' || !self.listeners('error').length) {\n        throw failure;\n      }\n\n      self.emit('error', failure);\n    }\n\n    //\n    // Sets the default connection URL, it uses the default origin of the browser\n    // when supported but degrades for older browsers. In Node.js, we cannot guess\n    // where the user wants to connect to, so we just default to localhost.\n    //\n    let defaultUrl;\n\n    try {\n      if (location.origin) {\n        defaultUrl = location.origin;\n      } else {\n        defaultUrl = `${location.protocol}//${location.host}`;\n      }\n    } catch (e) {\n      defaultUrl = 'http://127.0.0.1';\n    }\n\n    /**\n * Primus is a real-time library agnostic framework for establishing real-time\n * connections with servers.\n *\n * Options:\n * - reconnect, configuration for the reconnect process.\n * - manual, don't automatically call `.open` to start the connection.\n * - websockets, force the use of WebSockets, even when you should avoid them.\n * - timeout, connect timeout, server didn't respond in a timely manner.\n * - pingTimeout, The maximum amount of time to wait for the server to send a ping.\n * - network, Use network events as leading method for network connection drops.\n * - strategy, Reconnection strategies.\n * - transport, Transport options.\n * - url, uri, The URL to use connect with the server.\n *\n * @constructor\n * @param {String} url The URL of your server.\n * @param {Object} options The configuration.\n * @api public\n */\n    function Primus(url, options) {\n      if (!(this instanceof Primus)) return new Primus(url, options);\n\n      Primus.Stream.call(this);\n\n      if (typeof this.client !== 'function') {\n        return this.critical(new Error(\n          'The client library has not been compiled correctly, see ' +\n      'https://github.com/primus/primus#client-library for more details',\n        ));\n      }\n\n      if (typeof url === 'object') {\n        options = url;\n        url = options.url || options.uri || defaultUrl;\n      } else {\n        options = options || {};\n      }\n\n      if ('ping' in options || 'pong' in options) {\n        return this.critical(new Error(\n          'The `ping` and `pong` options have been removed',\n        ));\n      }\n\n      const primus = this;\n\n      // The maximum number of messages that can be placed in queue.\n      options.queueSize = 'queueSize' in options ? options.queueSize : Infinity;\n\n      // Connection timeout duration.\n      options.timeout = 'timeout' in options ? options.timeout : 10e3;\n\n      // Stores the back off configuration.\n      options.reconnect = 'reconnect' in options ? options.reconnect : {};\n\n      // Heartbeat ping interval.\n      options.pingTimeout = 'pingTimeout' in options ? options.pingTimeout : 45000;\n\n      // Reconnect strategies.\n      options.strategy = 'strategy' in options ? options.strategy : [];\n\n      // Custom transport options.\n      options.transport = 'transport' in options ? options.transport : {};\n\n      primus.buffer = []; // Stores premature send data.\n      primus.writable = true; // Silly stream compatibility.\n      primus.readable = true; // Silly stream compatibility.\n      primus.url = primus.parse(url || defaultUrl); // Parse the URL to a readable format.\n      primus.readyState = Primus.CLOSED; // The readyState of the connection.\n      primus.options = options; // Reference to the supplied options.\n      primus.timers = new TickTock(this); // Contains all our timers.\n      primus.socket = null; // Reference to the internal connection.\n      primus.disconnect = false; // Did we receive a disconnect packet?\n      primus.transport = options.transport; // Transport options.\n      primus.transformers = { // Message transformers.\n        outgoing: [],\n        incoming: [],\n      };\n\n      //\n      // Create our reconnection instance.\n      //\n      primus.recovery = new Recovery(options.reconnect);\n\n      //\n      // Parse the reconnection strategy. It can have the following strategies:\n      //\n      // - timeout: Reconnect when we have a network timeout.\n      // - disconnect: Reconnect when we have an unexpected disconnect.\n      // - online: Reconnect when we're back online.\n      //\n      if (typeof options.strategy === 'string') {\n        options.strategy = options.strategy.split(/\\s?,\\s?/g);\n      }\n\n      if (options.strategy === false) {\n        //\n        // Strategies are disabled, but we still need an empty array to join it in\n        // to nothing.\n        //\n        options.strategy = [];\n      } else if (!options.strategy.length) {\n        options.strategy.push('disconnect', 'online');\n\n        //\n        // Timeout based reconnection should only be enabled conditionally. When\n        // authorization is enabled it could trigger.\n        //\n        if (!this.authorization) options.strategy.push('timeout');\n      }\n\n      options.strategy = options.strategy.join(',').toLowerCase();\n\n      //\n      // Force the use of WebSockets, even when we've detected some potential\n      // broken WebSocket implementation.\n      //\n      if ('websockets' in options) {\n        primus.AVOID_WEBSOCKETS = !options.websockets;\n      }\n\n      //\n      // Force or disable the use of NETWORK events as leading client side\n      // disconnection detection.\n      //\n      if ('network' in options) {\n        primus.NETWORK_EVENTS = options.network;\n      }\n\n      //\n      // Check if the user wants to manually initialise a connection. If they don't,\n      // we want to do it after a really small timeout so we give the users enough\n      // time to listen for `error` events etc.\n      //\n      if (!options.manual) {\n        primus.timers.setTimeout('open', function open() {\n          primus.timers.clear('open');\n          primus.open();\n        }, 0);\n      }\n\n      primus.initialise(options);\n    }\n\n    /**\n * Simple require wrapper to make browserify, node and require.js play nice.\n *\n * @param {String} name The module to require.\n * @returns {Object|Undefined} The module that we required.\n * @api private\n */\n    Primus.requires = Primus.require = function requires(name) {\n      if (typeof _dereq_ !== 'function') return undefined;\n\n      return !(typeof define === 'function' && define.amd)\n        ? _dereq_(name)\n        : undefined;\n    };\n\n    //\n    // It's possible that we're running in Node.js or in a Node.js compatible\n    // environment. In this cases we try to inherit from the Stream base class.\n    //\n    try {\n      Primus.Stream = Primus.requires('stream');\n    } catch (e) { }\n\n    if (!Primus.Stream) Primus.Stream = EventEmitter;\n\n    inherits(Primus, Primus.Stream);\n\n    /**\n * Primus readyStates, used internally to set the correct ready state.\n *\n * @type {Number}\n * @private\n */\n    Primus.OPENING = 1; // We're opening the connection.\n    Primus.CLOSED = 2; // No active connection.\n    Primus.OPEN = 3; // The connection is open.\n\n    /**\n * Are we working with a potentially broken WebSockets implementation? This\n * boolean can be used by transformers to remove `WebSockets` from their\n * supported transports.\n *\n * @type {Boolean}\n * @private\n */\n    Primus.prototype.AVOID_WEBSOCKETS = false;\n\n    /**\n * Some browsers support registering emitting `online` and `offline` events when\n * the connection has been dropped on the client. We're going to detect it in\n * a simple `try {} catch (e) {}` statement so we don't have to do complicated\n * feature detection.\n *\n * @type {Boolean}\n * @private\n */\n    Primus.prototype.NETWORK_EVENTS = false;\n    Primus.prototype.online = true;\n\n    try {\n      if (\n        Primus.prototype.NETWORK_EVENTS = 'onLine' in navigator\n    && (window.addEventListener || document.body.attachEvent)\n      ) {\n        if (!navigator.onLine) {\n          Primus.prototype.online = false;\n        }\n      }\n    } catch (e) { }\n\n    /**\n * The Ark contains all our plugins definitions. It's namespaced by\n * name => plugin.\n *\n * @type {Object}\n * @private\n */\n    Primus.prototype.ark = {};\n\n    /**\n * Simple emit wrapper that returns a function that emits an event once it's\n * called. This makes it easier for transports to emit specific events.\n *\n * @returns {Function} A function that will emit the event when called.\n * @api public\n */\n    Primus.prototype.emits = _dereq_('emits');\n\n    /**\n * Return the given plugin.\n *\n * @param {String} name The name of the plugin.\n * @returns {Object|undefined} The plugin or undefined.\n * @api public\n */\n    Primus.prototype.plugin = function plugin(name) {\n      context(this, 'plugin');\n\n      if (name) return this.ark[name];\n\n      const plugins = {};\n\n      for (name in this.ark) {\n        plugins[name] = this.ark[name];\n      }\n\n      return plugins;\n    };\n\n    /**\n * Checks if the given event is an emitted event by Primus.\n *\n * @param {String} evt The event name.\n * @returns {Boolean} Indication of the event is reserved for internal use.\n * @api public\n */\n    Primus.prototype.reserved = function reserved(evt) {\n      return (/^(incoming|outgoing)::/).test(evt)\n  || evt in this.reserved.events;\n    };\n\n    /**\n * The actual events that are used by the client.\n *\n * @type {Object}\n * @public\n */\n    Primus.prototype.reserved.events = {\n      'reconnect scheduled': 1,\n      'reconnect timeout': 1,\n      readyStateChange: 1,\n      'reconnect failed': 1,\n      reconnected: 1,\n      reconnect: 1,\n      offline: 1,\n      timeout: 1,\n      destroy: 1,\n      online: 1,\n      error: 1,\n      close: 1,\n      open: 1,\n      data: 1,\n      end: 1,\n    };\n\n    /**\n * Initialise the Primus and setup all parsers and internal listeners.\n *\n * @param {Object} options The original options object.\n * @returns {Primus}\n * @api private\n */\n    Primus.prototype.initialise = function initialise(options) {\n      const primus = this;\n\n      primus.recovery\n        .on('reconnected', primus.emits('reconnected'))\n        .on('reconnect failed', primus.emits('reconnect failed', function failed(next) {\n          primus.emit('end');\n          next();\n        }))\n        .on('reconnect timeout', primus.emits('reconnect timeout'))\n        .on('reconnect scheduled', primus.emits('reconnect scheduled'))\n        .on('reconnect', primus.emits('reconnect', function reconnect(next) {\n          primus.emit('outgoing::reconnect');\n          next();\n        }));\n\n      primus.on('outgoing::open', function opening() {\n        const { readyState } = primus;\n\n        primus.readyState = Primus.OPENING;\n        if (readyState !== primus.readyState) {\n          primus.emit('readyStateChange', 'opening');\n        }\n      });\n\n      primus.on('incoming::open', function opened() {\n        const { readyState } = primus;\n\n        if (primus.recovery.reconnecting()) {\n          primus.recovery.reconnected();\n        }\n\n        //\n        // The connection has been opened so we should set our state to\n        // (writ|read)able so our stream compatibility works as intended.\n        //\n        primus.writable = true;\n        primus.readable = true;\n\n        //\n        // Make sure we are flagged as `online` as we've successfully opened the\n        // connection.\n        //\n        if (!primus.online) {\n          primus.online = true;\n          primus.emit('online');\n        }\n\n        primus.readyState = Primus.OPEN;\n        if (readyState !== primus.readyState) {\n          primus.emit('readyStateChange', 'open');\n        }\n\n        primus.heartbeat();\n\n        if (primus.buffer.length) {\n          const data = primus.buffer.slice();\n          const { length } = data;\n          let i = 0;\n\n          primus.buffer.length = 0;\n\n          for (; i < length; i++) {\n            primus._write(data[i]);\n          }\n        }\n\n        primus.emit('open');\n      });\n\n      primus.on('incoming::ping', function ping(time) {\n        primus.online = true;\n        primus.heartbeat();\n        primus.emit('outgoing::pong', time);\n        primus._write(`primus::pong::${time}`);\n      });\n\n      primus.on('incoming::error', function error(e) {\n        const connect = primus.timers.active('connect');\n        let err = e;\n\n        //\n        // When the error is not an Error instance we try to normalize it.\n        //\n        if (typeof e === 'string') {\n          err = new Error(e);\n        } else if (!(e instanceof Error) && typeof e === 'object') {\n          //\n          // BrowserChannel and SockJS returns an object which contains some\n          // details of the error. In order to have a proper error we \"copy\" the\n          // details in an Error instance.\n          //\n          err = new Error(e.message || e.reason);\n          for (const key in e) {\n            if (Object.prototype.hasOwnProperty.call(e, key)) err[key] = e[key];\n          }\n        }\n        //\n        // We're still doing a reconnect attempt, it could be that we failed to\n        // connect because the server was down. Failing connect attempts should\n        // always emit an `error` event instead of a `open` event.\n        //\n        //\n        if (primus.recovery.reconnecting()) return primus.recovery.reconnected(err);\n        if (primus.listeners('error').length) primus.emit('error', err);\n\n        //\n        // We received an error while connecting, this most likely the result of an\n        // unauthorized access to the server.\n        //\n        if (connect) {\n          if (~primus.options.strategy.indexOf('timeout')) {\n            primus.recovery.reconnect();\n          } else {\n            primus.end();\n          }\n        }\n      });\n\n      primus.on('incoming::data', function message(raw) {\n        primus.decoder(raw, function decoding(err, data) {\n          //\n          // Do a \"safe\" emit('error') when we fail to parse a message. We don't\n          // want to throw here as listening to errors should be optional.\n          //\n          if (err) return primus.listeners('error').length && primus.emit('error', err);\n\n          //\n          // Handle all \"primus::\" prefixed protocol messages.\n          //\n          if (primus.protocol(data)) return;\n          primus.transforms(primus, primus, 'incoming', data, raw);\n        });\n      });\n\n      primus.on('incoming::end', function end() {\n        const { readyState } = primus;\n\n        //\n        // This `end` started with the receiving of a primus::server::close packet\n        // which indicated that the user/developer on the server closed the\n        // connection and it was not a result of a network disruption. So we should\n        // kill the connection without doing a reconnect.\n        //\n        if (primus.disconnect) {\n          primus.disconnect = false;\n\n          return primus.end();\n        }\n\n        //\n        // Always set the readyState to closed, and if we're still connecting, close\n        // the connection so we're sure that everything after this if statement block\n        // is only executed because our readyState is set to `open`.\n        //\n        primus.readyState = Primus.CLOSED;\n        if (readyState !== primus.readyState) {\n          primus.emit('readyStateChange', 'end');\n        }\n\n        if (primus.timers.active('connect')) primus.end();\n        if (readyState !== Primus.OPEN) {\n          return primus.recovery.reconnecting()\n            ? primus.recovery.reconnect()\n            : false;\n        }\n\n        this.writable = false;\n        this.readable = false;\n\n        //\n        // Clear all timers in case we're not going to reconnect.\n        //\n        this.timers.clear();\n\n        //\n        // Fire the `close` event as an indication of connection disruption.\n        // This is also fired by `primus#end` so it is emitted in all cases.\n        //\n        primus.emit('close');\n\n        //\n        // The disconnect was unintentional, probably because the server has\n        // shutdown, so if the reconnection is enabled start a reconnect procedure.\n        //\n        if (~primus.options.strategy.indexOf('disconnect')) {\n          return primus.recovery.reconnect();\n        }\n\n        primus.emit('outgoing::end');\n        primus.emit('end');\n      });\n\n      //\n      // Setup the real-time client.\n      //\n      primus.client();\n\n      //\n      // Process the potential plugins.\n      //\n      for (const plugin in primus.ark) {\n        primus.ark[plugin].call(primus, primus, options);\n      }\n\n      //\n      // NOTE: The following code is only required if we're supporting network\n      // events as it requires access to browser globals.\n      //\n      if (!primus.NETWORK_EVENTS) return primus;\n\n      /**\n   * Handler for offline notifications.\n   *\n   * @api private\n   */\n      primus.offlineHandler = function offline() {\n        if (!primus.online) return; // Already or still offline, bailout.\n\n        primus.online = false;\n        primus.emit('offline');\n        primus.end();\n\n        //\n        // It is certainly possible that we're in a reconnection loop and that the\n        // user goes offline. In this case we want to kill the existing attempt so\n        // when the user goes online, it will attempt to reconnect freshly again.\n        //\n        primus.recovery.reset();\n      };\n\n      /**\n   * Handler for online notifications.\n   *\n   * @api private\n   */\n      primus.onlineHandler = function online() {\n        if (primus.online) return; // Already or still online, bailout.\n\n        primus.online = true;\n        primus.emit('online');\n\n        if (~primus.options.strategy.indexOf('online')) {\n          primus.recovery.reconnect();\n        }\n      };\n\n      if (window.addEventListener) {\n        window.addEventListener('offline', primus.offlineHandler, false);\n        window.addEventListener('online', primus.onlineHandler, false);\n      } else if (document.body.attachEvent) {\n        document.body.attachEvent('onoffline', primus.offlineHandler);\n        document.body.attachEvent('ononline', primus.onlineHandler);\n      }\n\n      return primus;\n    };\n\n    /**\n * Really dead simple protocol parser. We simply assume that every message that\n * is prefixed with `primus::` could be used as some sort of protocol definition\n * for Primus.\n *\n * @param {String} msg The data.\n * @returns {Boolean} Is a protocol message.\n * @api private\n */\n    Primus.prototype.protocol = function protocol(msg) {\n      if (\n        typeof msg !== 'string'\n    || msg.indexOf('primus::') !== 0\n      ) return false;\n\n      const last = msg.indexOf(':', 8);\n      const value = msg.slice(last + 2);\n\n      switch (msg.slice(8, last)) {\n      case 'ping':\n        this.emit('incoming::ping', +value);\n        break;\n\n      case 'server':\n        //\n        // The server is closing the connection, forcefully disconnect so we don't\n        // reconnect again.\n        //\n        if (value === 'close') {\n          this.disconnect = true;\n        }\n        break;\n\n      case 'id':\n        this.emit('incoming::id', value);\n        break;\n\n        //\n        // Unknown protocol, somebody is probably sending `primus::` prefixed\n        // messages.\n        //\n      default:\n        return false;\n      }\n\n      return true;\n    };\n\n    /**\n * Execute the set of message transformers from Primus on the incoming or\n * outgoing message.\n * This function and it's content should be in sync with Spark#transforms in\n * spark.js.\n *\n * @param {Primus} primus Reference to the Primus instance with message transformers.\n * @param {Spark|Primus} connection Connection that receives or sends data.\n * @param {String} type The type of message, 'incoming' or 'outgoing'.\n * @param {Mixed} data The data to send or that has been received.\n * @param {String} raw The raw encoded data.\n * @returns {Primus}\n * @api public\n */\n    Primus.prototype.transforms = function transforms(primus, connection, type, data, raw) {\n      const packet = { data };\n      const fns = primus.transformers[type];\n\n      //\n      // Iterate in series over the message transformers so we can allow optional\n      // asynchronous execution of message transformers which could for example\n      // retrieve additional data from the server, do extra decoding or even\n      // message validation.\n      //\n      (function transform(index, done) {\n        const transformer = fns[index++];\n\n        if (!transformer) return done();\n\n        if (transformer.length === 1) {\n          if (transformer.call(connection, packet) === false) {\n            //\n            // When false is returned by an incoming transformer it means that's\n            // being handled by the transformer and we should not emit the `data`\n            // event.\n            //\n            return;\n          }\n\n          return transform(index, done);\n        }\n\n        transformer.call(connection, packet, function finished(err, arg) {\n          if (err) return connection.emit('error', err);\n          if (arg === false) return;\n\n          transform(index, done);\n        });\n      }(0, function done() {\n        //\n        // We always emit 2 arguments for the data event, the first argument is the\n        // parsed data and the second argument is the raw string that we received.\n        // This allows you, for example, to do some validation on the parsed data\n        // and then save the raw string in your database without the stringify\n        // overhead.\n        //\n        if (type === 'incoming') return connection.emit('data', packet.data, raw);\n\n        connection._write(packet.data);\n      }));\n\n      return this;\n    };\n\n    /**\n * Retrieve the current id from the server.\n *\n * @param {Function} fn Callback function.\n * @returns {Primus}\n * @api public\n */\n    Primus.prototype.id = function id(fn) {\n      if (this.socket && this.socket.id) return fn(this.socket.id);\n\n      this._write('primus::id::');\n      return this.once('incoming::id', fn);\n    };\n\n    /**\n * Establish a connection with the server. When this function is called we\n * assume that we don't have any open connections. If you do call it when you\n * have a connection open, it could cause duplicate connections.\n *\n * @returns {Primus}\n * @api public\n */\n    Primus.prototype.open = function open() {\n      context(this, 'open');\n\n      //\n      // Only start a `connection timeout` procedure if we're not reconnecting as\n      // that shouldn't count as an initial connection. This should be started\n      // before the connection is opened to capture failing connections and kill the\n      // timeout.\n      //\n      if (!this.recovery.reconnecting() && this.options.timeout) this.timeout();\n\n      this.emit('outgoing::open');\n      return this;\n    };\n\n    /**\n * Send a new message.\n *\n * @param {Mixed} data The data that needs to be written.\n * @returns {Boolean} Always returns true as we don't support back pressure.\n * @api public\n */\n    Primus.prototype.write = function write(data) {\n      context(this, 'write');\n      this.transforms(this, this, 'outgoing', data);\n\n      return true;\n    };\n\n    /**\n * The actual message writer.\n *\n * @param {Mixed} data The message that needs to be written.\n * @returns {Boolean} Successful write to the underlaying transport.\n * @api private\n */\n    Primus.prototype._write = function write(data) {\n      const primus = this;\n\n      //\n      // The connection is closed, normally this would already be done in the\n      // `spark.write` method, but as `_write` is used internally, we should also\n      // add the same check here to prevent potential crashes by writing to a dead\n      // socket.\n      //\n      if (Primus.OPEN !== primus.readyState) {\n        //\n        // If the buffer is at capacity, remove the first item.\n        //\n        if (this.buffer.length === this.options.queueSize) {\n          this.buffer.splice(0, 1);\n        }\n\n        this.buffer.push(data);\n        return false;\n      }\n\n      primus.encoder(data, function encoded(err, packet) {\n        //\n        // Do a \"safe\" emit('error') when we fail to parse a message. We don't\n        // want to throw here as listening to errors should be optional.\n        //\n        if (err) return primus.listeners('error').length && primus.emit('error', err);\n\n        //\n        // Hack 1: \\u2028 and \\u2029 are allowed inside a JSON string, but JavaScript\n        // defines them as newline separators. Unescaped control characters are not\n        // allowed inside JSON strings, so this causes an error at parse time. We\n        // work around this issue by escaping these characters. This can cause\n        // errors with JSONP requests or if the string is just evaluated.\n        //\n        if (typeof packet === 'string') {\n          if (~packet.indexOf('\\u2028')) packet = packet.replace(u2028, '\\\\u2028');\n          if (~packet.indexOf('\\u2029')) packet = packet.replace(u2029, '\\\\u2029');\n        }\n\n        primus.emit('outgoing::data', packet);\n      });\n\n      return true;\n    };\n\n    /**\n * Set a timer that, upon expiration, closes the client.\n *\n * @returns {Primus}\n * @api private\n */\n    Primus.prototype.heartbeat = function heartbeat() {\n      if (!this.options.pingTimeout) return this;\n\n      this.timers.clear('heartbeat');\n      this.timers.setTimeout('heartbeat', function expired() {\n        //\n        // The network events already captured the offline event.\n        //\n        if (!this.online) return;\n\n        this.online = false;\n        this.emit('offline');\n        this.emit('incoming::end');\n      }, this.options.pingTimeout);\n\n      return this;\n    };\n\n    /**\n * Start a connection timeout.\n *\n * @returns {Primus}\n * @api private\n */\n    Primus.prototype.timeout = function timeout() {\n      const primus = this;\n\n      /**\n   * Remove all references to the timeout listener as we've received an event\n   * that can be used to determine state.\n   *\n   * @api private\n   */\n      function remove() {\n        primus.removeListener('error', remove)\n          .removeListener('open', remove)\n          .removeListener('end', remove)\n          .timers.clear('connect');\n      }\n\n      primus.timers.setTimeout('connect', function expired() {\n        remove(); // Clean up old references.\n\n        if (primus.readyState === Primus.OPEN || primus.recovery.reconnecting()) {\n          return;\n        }\n\n        primus.emit('timeout');\n\n        //\n        // We failed to connect to the server.\n        //\n        if (~primus.options.strategy.indexOf('timeout')) {\n          primus.recovery.reconnect();\n        } else {\n          primus.end();\n        }\n      }, primus.options.timeout);\n\n      return primus.on('error', remove)\n        .on('open', remove)\n        .on('end', remove);\n    };\n\n    /**\n * Close the connection completely.\n *\n * @param {Mixed} data last packet of data.\n * @returns {Primus}\n * @api public\n */\n    Primus.prototype.end = function end(data) {\n      context(this, 'end');\n\n      if (\n        this.readyState === Primus.CLOSED\n    && !this.timers.active('connect')\n    && !this.timers.active('open')\n      ) {\n        //\n        // If we are reconnecting stop the reconnection procedure.\n        //\n        if (this.recovery.reconnecting()) {\n          this.recovery.reset();\n          this.emit('end');\n        }\n\n        return this;\n      }\n\n      if (data !== undefined) this.write(data);\n\n      this.writable = false;\n      this.readable = false;\n\n      const { readyState } = this;\n      this.readyState = Primus.CLOSED;\n\n      if (readyState !== this.readyState) {\n        this.emit('readyStateChange', 'end');\n      }\n\n      this.timers.clear();\n      this.emit('outgoing::end');\n      this.emit('close');\n      this.emit('end');\n\n      return this;\n    };\n\n    /**\n * Completely demolish the Primus instance and forcefully nuke all references.\n *\n * @returns {Boolean}\n * @api public\n */\n    Primus.prototype.destroy = destroy('url timers options recovery socket transport transformers', {\n      before: 'end',\n      after: ['removeAllListeners', function detach() {\n        if (!this.NETWORK_EVENTS) return;\n\n        if (window.addEventListener) {\n          window.removeEventListener('offline', this.offlineHandler);\n          window.removeEventListener('online', this.onlineHandler);\n        } else if (document.body.attachEvent) {\n          document.body.detachEvent('onoffline', this.offlineHandler);\n          document.body.detachEvent('ononline', this.onlineHandler);\n        }\n      }],\n    });\n\n    /**\n * Create a shallow clone of a given object.\n *\n * @param {Object} obj The object that needs to be cloned.\n * @returns {Object} Copy.\n * @api private\n */\n    Primus.prototype.clone = function clone(obj) {\n      return this.merge({}, obj);\n    };\n\n    /**\n * Merge different objects in to one target object.\n *\n * @param {Object} target The object where everything should be merged in.\n * @returns {Object} Original target with all merged objects.\n * @api private\n */\n    Primus.prototype.merge = function merge(target) {\n      for (var i = 1, key, obj; i < arguments.length; i++) {\n        obj = arguments[i];\n\n        for (key in obj) {\n          if (Object.prototype.hasOwnProperty.call(obj, key)) target[key] = obj[key];\n        }\n      }\n\n      return target;\n    };\n\n    /**\n * Parse the connection string.\n *\n * @type {Function}\n * @param {String} url Connection URL.\n * @returns {Object} Parsed connection.\n * @api private\n */\n    Primus.prototype.parse = _dereq_('url-parse');\n\n    /**\n * Parse a query string.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object} Parsed query string.\n * @api private\n */\n    Primus.prototype.querystring = qs.parse;\n    /**\n * Transform a query string object back into string equiv.\n *\n * @param {Object} obj The query string object.\n * @returns {String}\n * @api private\n */\n    Primus.prototype.querystringify = qs.stringify;\n\n    /**\n * Generates a connection URI.\n *\n * @param {String} protocol The protocol that should used to crate the URI.\n * @returns {String|options} The URL.\n * @api private\n */\n    Primus.prototype.uri = function uri(options) {\n      const { url } = this;\n      const server = [];\n      let qsa = false;\n\n      //\n      // Query strings are only allowed when we've received clearance for it.\n      //\n      if (options.query) qsa = true;\n\n      options = options || {};\n      options.protocol = 'protocol' in options\n        ? options.protocol\n        : 'http:';\n      options.query = url.query && qsa\n        ? url.query.slice(1)\n        : false;\n      options.secure = 'secure' in options\n        ? options.secure\n        : url.protocol === 'https:' || url.protocol === 'wss:';\n      options.auth = 'auth' in options\n        ? options.auth\n        : url.auth;\n      options.pathname = 'pathname' in options\n        ? options.pathname\n        : this.pathname;\n      options.port = 'port' in options\n        ? +options.port\n        : +url.port || (options.secure ? 443 : 80);\n\n      //\n      // We need to make sure that we create a unique connection URL every time to\n      // prevent back forward cache from becoming an issue. We're doing this by\n      // forcing an cache busting query string in to the URL.\n      //\n      const querystring = this.querystring(options.query || '');\n      querystring._primuscb = yeast();\n      options.query = this.querystringify(querystring);\n\n      //\n      // Allow transformation of the options before we construct a full URL from it.\n      //\n      this.emit('outgoing::url', options);\n\n      //\n      // Automatically suffix the protocol so we can supply `ws:` and `http:` and\n      // it gets transformed correctly.\n      //\n      server.push(options.secure ? options.protocol.replace(':', 's:') : options.protocol, '');\n\n      server.push(options.auth ? `${options.auth}@${url.host}` : url.host);\n\n      //\n      // Pathnames are optional as some Transformers would just use the pathname\n      // directly.\n      //\n      if (options.pathname) server.push(options.pathname.slice(1));\n\n      //\n      // Optionally add a search query.\n      //\n      if (qsa) server[server.length - 1] += `?${options.query}`;\n      else delete options.query;\n\n      if (options.object) return options;\n      return server.join('/');\n    };\n\n    /**\n * Register a new message transformer. This allows you to easily manipulate incoming\n * and outgoing data which is particularity handy for plugins that want to send\n * meta data together with the messages.\n *\n * @param {String} type Incoming or outgoing\n * @param {Function} fn A new message transformer.\n * @returns {Primus}\n * @api public\n */\n    Primus.prototype.transform = function transform(type, fn) {\n      context(this, 'transform');\n\n      if (!(type in this.transformers)) {\n        return this.critical(new Error('Invalid transformer type'));\n      }\n\n      this.transformers[type].push(fn);\n      return this;\n    };\n\n    /**\n * A critical error has occurred, if we have an `error` listener, emit it there.\n * If not, throw it, so we get a stack trace + proper error message.\n *\n * @param {Error} err The critical error.\n * @returns {Primus}\n * @api private\n */\n    Primus.prototype.critical = function critical(err) {\n      if (this.emit('error', err)) return this;\n\n      throw err;\n    };\n\n    /**\n * Syntax sugar, adopt a Socket.IO like API.\n *\n * @param {String} url The URL we want to connect to.\n * @param {Object} options Connection options.\n * @returns {Primus}\n * @api public\n */\n    Primus.connect = function connect(url, options) {\n      return new Primus(url, options);\n    };\n\n    //\n    // Expose the EventEmitter so it can be re-used by wrapping libraries we're also\n    // exposing the Stream interface.\n    //\n    Primus.EventEmitter = EventEmitter;\n\n    //\n    // These libraries are automatically inserted at the server-side using the\n    // Primus#library method.\n    //\n    Primus.prototype.client = function client() {\n      const primus = this;\n      let socket;\n\n      //\n      // Select an available WebSocket factory.\n      //\n      const Factory = (function factory() {\n        if (typeof WebSocket !== 'undefined') return WebSocket;\n        if (typeof MozWebSocket !== 'undefined') return MozWebSocket;\n\n        try { return Primus.requires('ws'); } catch (e) {}\n\n        return undefined;\n      }());\n\n      if (!Factory) {\n        return primus.critical(new Error(\n          'Missing required `ws` module. Please run `npm install --save ws`',\n        ));\n      }\n\n      //\n      // Connect to the given URL.\n      //\n      primus.on('outgoing::open', function opening() {\n        primus.emit('outgoing::end');\n\n        //\n        // FireFox will throw an error when we try to establish a connection from\n        // a secure page to an unsecured WebSocket connection. This is inconsistent\n        // behaviour between different browsers. This should ideally be solved in\n        // Primus when we connect.\n        //\n        try {\n          const options = {\n            protocol: primus.url.protocol === 'ws+unix:' ? 'ws+unix:' : 'ws:',\n            query: true,\n          };\n\n          //\n          // Only allow primus.transport object in Node.js, it will throw in\n          // browsers with a TypeError if we supply to much arguments.\n          //\n          if (Factory.length === 3) {\n            if (options.protocol === 'ws+unix:') {\n              options.pathname = `${primus.url.pathname}:${primus.pathname}`;\n            }\n            primus.socket = socket = new Factory(\n              primus.uri(options), // URL\n              [], // Sub protocols\n              primus.transport, // options.\n            );\n          } else {\n            primus.socket = socket = new Factory(primus.uri(options));\n            socket.binaryType = 'arraybuffer';\n          }\n        } catch (e) { return primus.emit('error', e); }\n\n        //\n        // Setup the Event handlers.\n        //\n        socket.onopen = primus.emits('incoming::open');\n        socket.onerror = primus.emits('incoming::error');\n        socket.onclose = primus.emits('incoming::end');\n        socket.onmessage = primus.emits('incoming::data', function parse(next, evt) {\n          next(undefined, evt.data);\n        });\n      });\n\n      //\n      // We need to write a new message to the socket.\n      //\n      primus.on('outgoing::data', function write(message) {\n        if (!socket || socket.readyState !== Factory.OPEN) return;\n\n        try { socket.send(message); } catch (e) { primus.emit('incoming::error', e); }\n      });\n\n      //\n      // Attempt to reconnect the socket.\n      //\n      primus.on('outgoing::reconnect', function reconnect() {\n        primus.emit('outgoing::open');\n      });\n\n      //\n      // We need to close the socket.\n      //\n      primus.on('outgoing::end', function close() {\n        if (!socket) return;\n\n        socket.onerror = socket.onopen = socket.onclose = socket.onmessage = function () {};\n        socket.close();\n        socket = null;\n      });\n    };\n    Primus.prototype.authorization = false;\n    Primus.prototype.pathname = '/primus';\n    Primus.prototype.encoder = function encoder(data, fn) {\n      let err;\n\n      try { data = JSON.stringify(data); } catch (e) { err = e; }\n\n      fn(err, data);\n    };\n    Primus.prototype.decoder = function decoder(data, fn) {\n      let err;\n\n      if (typeof data !== 'string') return fn(err, data);\n\n      try { data = JSON.parse(data); } catch (e) { err = e; }\n\n      fn(err, data);\n    };\n    Primus.prototype.version = '7.3.4';\n\n    if (\n      typeof document !== 'undefined'\n  && typeof navigator !== 'undefined'\n    ) {\n      //\n      // Hack 2: If you press ESC in FireFox it will close all active connections.\n      // Normally this makes sense, when your page is still loading. But versions\n      // before FireFox 22 will close all connections including WebSocket connections\n      // after page load. One way to prevent this is to do a `preventDefault()` and\n      // cancel the operation before it bubbles up to the browsers default handler.\n      // It needs to be added as `keydown` event, if it's added keyup it will not be\n      // able to prevent the connection from being closed.\n      //\n      if (document.addEventListener) {\n        document.addEventListener('keydown', function keydown(e) {\n          if (e.keyCode !== 27 || !e.preventDefault) return;\n\n          e.preventDefault();\n        }, false);\n      }\n\n      //\n      // Hack 3: This is a Mac/Apple bug only, when you're behind a reverse proxy or\n      // have you network settings set to `automatic proxy discovery` the safari\n      // browser will crash when the WebSocket constructor is initialised. There is\n      // no way to detect the usage of these proxies available in JavaScript so we\n      // need to do some nasty browser sniffing. This only affects Safari versions\n      // lower then 5.1.4\n      //\n      const ua = (navigator.userAgent || '').toLowerCase();\n      const parsed = ua.match(/.+(?:rv|it|ra|ie)[/: ](\\d+)\\.(\\d+)(?:\\.(\\d+))?/) || [];\n      const version = +[parsed[1], parsed[2]].join('.');\n\n      if (\n        !~ua.indexOf('chrome')\n    && ~ua.indexOf('safari')\n    && version < 534.54\n      ) {\n        Primus.prototype.AVOID_WEBSOCKETS = true;\n      }\n    }\n\n    //\n    // Expose the library.\n    //\n    module.exports = Primus;\n  }, { demolish: 1, emits: 2, eventemitter3: 3, inherits: 4, querystringify: 8, recovery: 9, 'tick-tock': 12, 'url-parse': 14, yeast: 15 }] }, {}, [16])(16);\n  Primus.prototype.ark.emitter = function () {};\n  return Primus;\n},\n[\n  function (Primus) {\n    (function (Primus, undefined) {\n      function spark(Spark, Emitter) {\n        /**\n   * `Primus#initialise` reference.\n   */\n\n        const { initialise } = Spark.prototype;\n\n        /**\n   * Initialise the Primus and setup all\n   * parsers and internal listeners.\n   *\n   * @api private\n   */\n\n        Spark.prototype.initialise = function init() {\n          if (!this.emitter) this.emitter = new Emitter(this);\n          if (!this.__initialise) initialise.apply(this, arguments);\n        };\n\n        // Extend the Spark to add the send method. If `Spark.readable`\n        // is not supported then we set the method on the prototype instead.\n        if (!Spark.readable) Spark.prototype.send = send;\n        else if (!Spark.prototype.send) Spark.readable('send', send);\n\n        /**\n   * Emits to this Spark.\n   *\n   * @param {String} ev The event\n   * @param {Mixed} [data] The data to broadcast\n   * @param {Function} [fn] The callback function\n   * @return {Primus|Spark} this\n   * @api public\n   */\n\n        function send(ev, data, fn) {\n          /* jshint validthis: true */\n          // ignore newListener event to avoid this error in node 0.8\n          // https://github.com/cayasso/primus-emitter/issues/3\n          if (/^(newListener|removeListener)/.test(ev)) return this;\n          this.emitter.send.apply(this.emitter, arguments);\n          return this;\n        }\n      }\n      function emitter() {\n        const { toString } = Object.prototype;\n        const { slice } = Array.prototype;\n\n        /**\n   * Check if the given `value` is an `Array`.\n   *\n   * @param {*} value The value to check\n   * @return {Boolean}\n   */\n\n        const isArray = Array.isArray || function isArray(value) {\n          return toString.call(value) === '[object Array]';\n        };\n\n        /**\n   * Event packets.\n   */\n\n        const packets = {\n          EVENT: 0,\n          ACK: 1,\n        };\n\n        /**\n   * Initialize a new `Emitter`.\n   *\n   * @param {Primus|Spark} conn\n   * @return {Emitter} `Emitter` instance\n   * @api public\n   */\n\n        function Emitter(conn) {\n          if (!(this instanceof Emitter)) return new Emitter(conn);\n          this.ids = 1;\n          this.acks = {};\n          this.conn = conn;\n          if (this.conn) this.bind();\n        }\n\n        /**\n   * Bind `Emitter` events.\n   *\n   * @return {Emitter} self\n   * @api private\n   */\n\n        Emitter.prototype.bind = function bind() {\n          const em = this;\n          this.conn.on('data', function ondata(packet) {\n            em.ondata.call(em, packet);\n          });\n          return this;\n        };\n\n        /**\n   * Called with incoming transport data.\n   *\n   * @param {Object} packet\n   * @return {Emitter} self\n   * @api private\n   */\n\n        Emitter.prototype.ondata = function ondata(packet) {\n          if (!isArray(packet.data) || packet.id && typeof packet.id !== 'number') {\n            return this;\n          }\n          switch (packet.type) {\n          case packets.EVENT:\n            this.onevent(packet);\n            break;\n          case packets.ACK:\n            this.onack(packet);\n          }\n          return this;\n        };\n\n        /**\n   * Send a message to client.\n   *\n   * @return {Emitter} self\n   * @api public\n   */\n\n        Emitter.prototype.send = function send() {\n          const args = slice.call(arguments);\n          this.conn.write(this.packet(args));\n          return this;\n        };\n\n        /**\n   * Prepare packet for emitting.\n   *\n   * @param {Array} arguments\n   * @return {Object} packet\n   * @api private\n   */\n\n        Emitter.prototype.packet = function pack(args) {\n          const packet = { type: packets.EVENT, data: args };\n          // access last argument to see if it's an ACK callback\n          if (typeof args[args.length - 1] === 'function') {\n            const id = this.ids++;\n            this.acks[id] = args.pop();\n            packet.id = id;\n          }\n          return packet;\n        };\n\n        /**\n   * Called upon event packet.\n   *\n   * @param {Object} packet object\n   * @return {Emitter} self\n   * @api private\n   */\n\n        Emitter.prototype.onevent = function onevent(packet) {\n          const args = packet.data;\n          if (this.conn.reserved(args[0])) return this;\n          if (packet.id) args.push(this.ack(packet.id));\n          this.conn.emit.apply(this.conn, args);\n          return this;\n        };\n\n        /**\n   * Produces an ack callback to emit with an event.\n   *\n   * @param {Number} packet id\n   * @return {Function}\n   * @api private\n   */\n\n        Emitter.prototype.ack = function ack(id) {\n          const { conn } = this;\n          let sent = false;\n          return function () {\n            if (sent) return; // prevent double callbacks\n            sent = true;\n            conn.write({\n              id,\n              type: packets.ACK,\n              data: slice.call(arguments),\n            });\n          };\n        };\n\n        /**\n   * Called upon ack packet.\n   *\n   * @param {Object} packet object\n   * @return {Emitter} self\n   * @api private\n   */\n\n        Emitter.prototype.onack = function onack(packet) {\n          const ack = this.acks[packet.id];\n          if (typeof ack === 'function') {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n          }\n          return this;\n        };\n\n        // Expose packets\n        Emitter.packets = packets;\n\n        return Emitter;\n      }\n      if (undefined === Primus) return;\n      Primus.$ = Primus.$ || {};\n      Primus.$.emitter = {};\n      Primus.$.emitter.spark = spark;\n      Primus.$.emitter.emitter = emitter;\n      spark(Primus, emitter());\n    }(Primus));\n  },\n]));\n"],
  "mappings": "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",
  "names": ["define", "module", "exports", "i", "r", "n", "self", "l", "e", "connect", "global", "location", "Primus", "undefined", "isArray"]
}
